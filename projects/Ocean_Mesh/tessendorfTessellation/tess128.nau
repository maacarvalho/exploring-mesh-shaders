<?xml version="1.0" ?>
<project name="Tessendorf Waves - Tessellation" width=1024 height=1024>
	<assets>
		<constants>
			<!--constant name="SSIZE" value=1024 /> 
			<constant name="L2SIZE" value=10 /> 
			<constant name="L2SIZE_PLUS1" value=11 /> 
			<constant name="D8SIZE" value=128 /-->
			
			<constant name="SSIZE" value=512 /> 
			<constant name="L2SIZE" value=9 /> 
			<constant name="L2SIZE_PLUS1" value=10 /> 
			<constant name="D8SIZE" value=64 />

			<!--constant name="SSIZE" value=256 /> 
			<constant name="L2SIZE" value=8 /> 
			<constant name="L2SIZE_PLUS1" value=9 /> 
			<constant name="D8SIZE" value=32 /-->

		</constants>
		
		<attributes>

			<attribute type="RENDERER" name="ballScale" data="FLOAT" value=1.0 />	
			
			<!-- FFT texture dim -->
			<attribute type="RENDERER" name="width" data="INT" value="SSIZE" />
			
			<!-- log of width - set by lua script -->	
			<attribute type="RENDERER" name="log_width" data="INT" value="L2SIZE" /> 
			<!-- butterfly stage -->
			<attribute type="RENDERER" name="current_stage" data="INT" value="0" /> 
			<!-- pingpong status - set by lua script -->
			<attribute type="RENDERER" name="pingpong" data ="INT" value="0" /> 

			<!--attribute type="RENDERER" name="scale" data ="FLOAT" value="1" /--> 

			<!-- attribute for mipampping: current level - set by lua script -->
			<attribute type="RENDERER" name="currentLevel" data="INT" value="0" />
			
			<!-- random distribution -->
			<attribute type="RENDERER" name="randomDistribution" data="INT" value=1 />
			<!-- Ocean attributes -->
			<attribute type="RENDERER" name="oceanDepth" data="FLOAT" value=20 />
			<attribute type="RENDERER" name="L" data="INT" value=512 />
			
			<attribute type="RENDERER" name="spectrum" data="INT" value="1" />
			<attribute type="RENDERER" name="dispersion" data="INT" value="0" />
			<attribute type="RENDERER" name="dirSpreading" data="INT" value="0" />
			
			<attribute type="RENDERER" name="spectrumScale" data="FLOAT" value="1" />
			
			<attribute type="RENDERER" name="choppyFactor" data="FLOAT" value=1 />
			

			<!-- Spectrum parameters -->
			<attribute type="RENDERER" name="fetch" data="FLOAT" value="1200000.0" />
			<attribute type="RENDERER" name="windDir" data="VEC2" x=1 y=0 />
			<attribute type="RENDERER" name="windSpeed" data="FLOAT" value=10 />

			<!-- Directional spreading parameters -->
			<attribute type="RENDERER" name="propagate" data="INT" value=1 />			
			<attribute type="RENDERER" name="swell" data="FLOAT" value="0" />

			<!-- Occhi and Bretschneider -->
			<attribute type="RENDERER" name="Hs" data="FLOAT" value=10.0 />

			<!-- JONSWAP params -->
			<attribute type="RENDERER" name="JONSWAP_gamma" data="FLOAT" value="3.3" />
			<attribute type="RENDERER" name="JONSWAP_sigmaA" data="FLOAT" value="0.07" />
			<attribute type="RENDERER" name="JONSWAP_sigmaB" data="FLOAT" value="0.09" />
			
			<!-- Bretschneider params wm = 0.4 * sqrt(G/Hs)-->
			<attribute type="RENDERER" name="Bretschneider_wm" data="FLOAT" value="0.0" />
			
			<!-- Ochi params Ochi_wm1 = 0.7f * exp(-0.046f * Hs); 	Ochi_Hs1 = 0.84f * Hs;	
				Ochi_lambda2 = 1.54f * exp(-0.062f *  Hs);	Ochi_wm2 = 1.15f * exp(-0.039f * Hs);
				Ochi_Hs2 = 0.54f * Hs;-->
			<attribute type="RENDERER" name="Ochi_lambda1" data="FLOAT" value="3.0" />
			<attribute type="RENDERER" name="Ochi_lambda2" data="FLOAT" value="0.0" />
			<attribute type="RENDERER" name="Ochi_wm1" data="FLOAT" value="0.0" />
			<attribute type="RENDERER" name="Ochi_wm2" data="FLOAT" value="0.0" />
			<attribute type="RENDERER" name="Ochi_Hs1" data="FLOAT" value="0.0" />
			<attribute type="RENDERER" name="Ochi_Hs2" data="FLOAT" value="0.0" />
			<!--attribute type="RENDERER" name="A" data="FLOAT" value="3e-6" /-->
			
			<!-- Color parameters -->
			<attribute type="RENDERER" name="oceanType" data="INT" value="1" />
			<attribute type="RENDERER" name="oceanTrans" data="VEC3" x="98.2" y="95.8" z="57.0" />
			<attribute type="RENDERER" name="oceanFloorColor" data="VEC3" x="0.956" y="0.925" z="0.925" />
			
            <!--camera -->
            <attribute type="RENDERER" name="CamMode" data="INT" value="1" />

			<!-- tessellation attributes -->
            <attribute type="RENDERER" name="MaxTessellationLvl" data="FLOAT" value="64" />
			<attribute type="RENDERER" name="GridSize" data="INT" value="255" />
			<attribute type="RENDERER" name="PixelsPerEdge" data="INT" value="5" />
			<attribute type="RENDERER" name="GridSpacing" data="FLOAT" value=20 />
			<attribute type="RENDERER" name="Culling" data="INT" value="1" />
			<attribute type="RENDERER" name="AdapTessellation" data="INT" value="1" />
			
			<!-- sky attributes -->
			<attribute type="RENDERER" name="year" data="INT" value=2017 />
			<attribute type="RENDERER" name="month" data="INT" value=11  />
			<attribute type="RENDERER" name="day" data="INT" value=21  />
			<attribute type="RENDERER" name="decimalHour" data="FLOAT" value=9 />
			<attribute type="RENDERER" name="ordinalDay" data="INT" value=1 />
			
			<attribute type="RENDERER" name="meridian" data="INT" value=0 />
			<attribute type="RENDERER" name="latitude" data="FLOAT" value= 41.545449/>
			<attribute type="RENDERER" name="longitude" data="FLOAT" value=-8.426507/>
			<attribute type="RENDERER" name="sunAngles" data="VEC2" x=0 y=10 />
			
			
			<attribute type="RENDERER" name="hr" data="FLOAT" value=7994 />
			<attribute type="RENDERER" name="hm" data="FLOAT" value=1200 />
			<attribute type="RENDERER" name="g" data="FLOAT" value=0.98 />
			<attribute type="RENDERER" name="betaR" data="VEC3" 
								x="3.67044e-07" y="1.11688e-06" z="1.80601e-06" />
			<attribute type="RENDERER" name="waveLengths" data="VEC3" x="700" y="530" z="470" />
			<attribute type="RENDERER" name="pressure" data="FLOAT" value = "101325" />
			<attribute type="RENDERER" name="temperature" data="FLOAT" value="0" />
			<attribute type="RENDERER" name="indexOfRefraction" data = "FLOAT" value = "1.0003" />
			<attribute type="RENDERER" name="betaM" data="FLOAT" value=5.76e-7 />
			
			<attribute type="RENDERER" name="cameraMode" data="INT" value = 0 />
			<attribute type="RENDERER" name="exposure" data="FLOAT" value = 1.5 />
			<attribute type="RENDERER" name="steps light ray" data="INT" value = 8 />
			<attribute type="RENDERER" name="steps" data="INT" value = 8 />
			<attribute type="RENDERER" name="sampling" data="INT" value = 0 />
			
			<attribute type="RENDERER" name="debug" data="VEC3" x=0 y=0 z=0 />
			

		</attributes>
		
		<scenes>

			<scene name="GridTess" >
				<buffers name="point" primitive="POINTS" material="gridMat">
					<position name="position" fromLibrary="Ocean" />				
				</buffers>	
			</scene>
			
			<scene name="Ball" >
				<geometry name = "Sphere" type = "SPHERE" material="sphere" SLICES=30 STACKS=30 /> 
			</scene>
		</scenes>
		
		<viewports>
			<viewport name="MainViewport">
				<CLEAR_COLOR r="0.0" g="0.0" b="0.0" />
			</viewport>
		</viewports>
		
        <cameras>
            <camera name="MainCamera" >
                <viewport name="MainViewport" />
                <FOV value="60.0" />
                <NEAR value="1" FAR="2000.0" />
                <POSITION x="0" y="20" z="0" />
                <VIEW x="0.86" y="-0.173" z="0.478" />
                <UP x="0" y="1" z="0" />
            </camera>
            <camera name="GodCamera" >
                <viewport name="MainViewport" />
                <FOV value="60.0" />
                <NEAR value="1"/>
                <FAR value="10000" />
                <POSITION x="0" y="1000" z="0" />
                <VIEW x="0" y="-0.999" z="0.001" />
                <UP x="0" y="1" z="0" />
            </camera>
		</cameras>
		
		<lights>
			<light name="Sun" >
				<DIRECTION x="1.0" y="-1.5" z="-2" />
			</light>
		</lights>
		
		<materialLibs>
			<materialLib filename="tessendorfTessellation.mlib"/>
			<materialLib filename="atmos3.mlib" />
		</materialLibs> 
	</assets>

	<pipelines>
		<pipeline name="ocean" default="true" defaultCamera="MainCamera">
			<!-- sky init script -->
			<preScript script="tChanged" file="scripts/interface.lua" />
		
			<pass class="compute" name="h0">
				<mode value="RUN_ONCE" />
				<material name="fft_h0" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
			</pass>
		
			<pass class="compute" name="pass_hkt">
				<material name="fft_hkt" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1/>
			</pass>
		
			<!-- inverse fourier -->
			<!-- inverse FFT horizontal pass -->
			<pass class="compute" name="ifftHorizontal"> 
				<preScript file="scripts/fft.lua" script="resetInverseFFT" />
				<testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
				<material name="fftHorizontal" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
			</pass>
			
			<!-- inverse FFT vertical pass -->
			<pass class="compute" name="ifftVertical"> 
				<preScript file="scripts/fft.lua" script="resetInverseVertical" />
				<testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
				<material name="fftVertical" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
			</pass>
			
			<!--pass class="compute" name="mipmap">
				<testScript file="scripts/fft.lua" script="testMipmap" TEST_MODE="RUN_WHILE"/>
				<material name="mipmap" fromLibrary="Ocean" 
					dimX=256 dimY=256 dimZ=1/>
			</pass-->

			<pass class="quad" name="skyTexture">
				<renderTarget name="sky" fromLibrary="Ocean"/>
				<material name="skyTexture" fromLibrary="atmos" />
			</pass>
						
            <!--<pass class="quad" name="sky">-->
                <!--<viewport name="MainViewport" />-->
                <!--<material name="sky" fromLibrary="atmos" />-->
            <!--</pass>-->
			
			<pass class="default" name="renderGrid" >
                <preScript file="scripts/tess.lua" script="setTess1x" />
				<preProcess>
					<texture name="hkt" fromLibrary="Ocean" MIPMAP=true />
					<texture name="voronoi" fromLibrary="Ocean" MIPMAP=true />
				</preProcess>
				<COLOR_CLEAR value=false />
				<scenes instances = "65025">
					<scene name="GridTess" />
				</scenes>
				<camera name="MainCamera" />
				<viewport name="MainViewport" />
				<lights>
					<light name="Sun" />
				</lights>
				<materialMaps>
					<map fromMaterial="gridMat" toLibrary="Ocean" toMaterial="tessInfinity" />
				</materialMaps>
			</pass>

			<!--<pass class="default" name="ball" >-->
				<!--<COLOR_CLEAR value=false />-->
				<!--<DEPTH_CLEAR value=false />-->
				<!--<scenes>-->
					<!--<scene name="Ball" />-->
				<!--</scenes>-->
				<!--<camera name="MainCamera" />-->
				<!--<viewport name="MainViewport" />-->
				<!--<lights>-->
					<!--<light name="Sun" />-->
				<!--</lights>-->
				<!--<materialMaps>-->
					<!--<map fromMaterial="sphere" toLibrary="Ocean" toMaterial="lambert" />-->
				<!--</materialMaps>-->
			
			<!--</pass>-->
			<!-- render tessellated grid with height and disp maps: pos -->
			
			<!-- ray trace for reflection, sky color.... -->
			
		</pipeline>
        
        <pipeline name="ocean_mesh (1x)" default="true" defaultCamera="MainCamera">
            <!--[> sky init script <]-->
            <preScript script="tChanged" file="scripts/interface.lua" />
        
            <pass class="compute" name="h0">
                <mode value="RUN_ONCE" />
                <material name="fft_h0" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
        
            <pass class="compute" name="pass_hkt">
                <material name="fft_hkt" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1/>
            </pass>
        
            <!--[> inverse fourier <]-->
            <!--[> inverse FFT horizontal pass <]-->
            <pass class="compute" name="ifftHorizontal"> 
                <preScript file="scripts/fft.lua" script="resetInverseFFT" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftHorizontal" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--[> inverse FFT vertical pass <]-->
            <pass class="compute" name="ifftVertical"> 
                <preScript file="scripts/fft.lua" script="resetInverseVertical" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftVertical" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--pass class="compute" name="mipmap">
                <testScript file="scripts/fft.lua" script="testMipmap" TEST_MODE="RUN_WHILE"/>
                <material name="mipmap" fromLibrary="Ocean" 
                    dimX=256 dimY=256 dimZ=1/>
            </pass-->

            <pass class="quad" name="skyTexture">
                <renderTarget name="sky" fromLibrary="Ocean"/>
                <material name="skyTexture" fromLibrary="atmos" />
            </pass>
                        
            <!--<pass class="quad" name="sky">-->
                <!--<viewport name="MainViewport" />-->
                <!--<material name="sky" fromLibrary="atmos" />-->
            <!--</pass>-->
            
            <pass class="mesh" name="renderGrid" >
                <preScript file="scripts/tess.lua" script="setTess1x" />
                <preProcess>
                    <texture name="hkt" fromLibrary="Ocean" MIPMAP=true />
                    <texture name="voronoi" fromLibrary="Ocean" MIPMAP=true />
                </preProcess>
                <COLOR_CLEAR value=false />
                <camera name="MainCamera" />
                <viewport name="MainViewport" />
                <lights>
                    <light name="Sun" />
                </lights>
                <materials>
                    <material name="meshInner128" fromLibrary="Ocean" count="65025" />
                    <material name="meshOuter128" fromLibrary="Ocean" count="65025" />
                </materials>
            </pass>

            <!--<pass class="default" name="ball" >-->
                <!--<COLOR_CLEAR value=false />-->
                <!--<DEPTH_CLEAR value=false />-->
                <!--<scenes>-->
                    <!--<scene name="Ball" />-->
                <!--</scenes>-->
                <!--<camera name="MainCamera" />-->
                <!--<viewport name="MainViewport" />-->
                <!--<lights>-->
                    <!--<light name="Sun" />-->
                <!--</lights>-->
                <!--<materialMaps>-->
                    <!--<map fromMaterial="sphere" toLibrary="Ocean" toMaterial="lambert" />-->
                <!--</materialMaps>-->
            
            <!--</pass>-->
            <!--[> render tessellated grid with height and disp maps: pos <]-->
            
            <!--[> ray trace for reflection, sky color.... <]-->
            
        </pipeline>
        
        <pipeline name="ocean_mesh (2x)" default="true" defaultCamera="MainCamera">
            <!--[> sky init script <]-->
            <preScript script="tChanged" file="scripts/interface.lua" />
        
            <pass class="compute" name="h0">
                <mode value="RUN_ONCE" />
                <material name="fft_h0" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
        
            <pass class="compute" name="pass_hkt">
                <material name="fft_hkt" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1/>
            </pass>
        
            <!--[> inverse fourier <]-->
            <!--[> inverse FFT horizontal pass <]-->
            <pass class="compute" name="ifftHorizontal"> 
                <preScript file="scripts/fft.lua" script="resetInverseFFT" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftHorizontal" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--[> inverse FFT vertical pass <]-->
            <pass class="compute" name="ifftVertical"> 
                <preScript file="scripts/fft.lua" script="resetInverseVertical" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftVertical" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--pass class="compute" name="mipmap">
                <testScript file="scripts/fft.lua" script="testMipmap" TEST_MODE="RUN_WHILE"/>
                <material name="mipmap" fromLibrary="Ocean" 
                    dimX=256 dimY=256 dimZ=1/>
            </pass-->

            <pass class="quad" name="skyTexture">
                <renderTarget name="sky" fromLibrary="Ocean"/>
                <material name="skyTexture" fromLibrary="atmos" />
            </pass>
                        
            <!--<pass class="quad" name="sky">-->
                <!--<viewport name="MainViewport" />-->
                <!--<material name="sky" fromLibrary="atmos" />-->
            <!--</pass>-->
            
            <pass class="mesh" name="renderGrid" >
                <preScript file="scripts/tess.lua" script="setTess2x" />
                <preProcess>
                    <texture name="hkt" fromLibrary="Ocean" MIPMAP=true />
                    <texture name="voronoi" fromLibrary="Ocean" MIPMAP=true />
                </preProcess>
                <COLOR_CLEAR value=false />
                <camera name="MainCamera" />
                <viewport name="MainViewport" />
                <lights>
                    <light name="Sun" />
                </lights>
                <materials>
                    <material name="meshInner128" fromLibrary="Ocean" count="16129" />
                    <material name="meshOuter128" fromLibrary="Ocean" count="16129" />
                </materials>
            </pass>

            <!--<pass class="default" name="ball" >-->
                <!--<COLOR_CLEAR value=false />-->
                <!--<DEPTH_CLEAR value=false />-->
                <!--<scenes>-->
                    <!--<scene name="Ball" />-->
                <!--</scenes>-->
                <!--<camera name="MainCamera" />-->
                <!--<viewport name="MainViewport" />-->
                <!--<lights>-->
                    <!--<light name="Sun" />-->
                <!--</lights>-->
                <!--<materialMaps>-->
                    <!--<map fromMaterial="sphere" toLibrary="Ocean" toMaterial="lambert" />-->
                <!--</materialMaps>-->
            
            <!--</pass>-->
            <!--[> render tessellated grid with height and disp maps: pos <]-->
            
            <!--[> ray trace for reflection, sky color.... <]-->
            
        </pipeline>
        
        <pipeline name="ocean_mesh (4x)" default="true" defaultCamera="MainCamera">
            <!--[> sky init script <]-->
            <preScript script="tChanged" file="scripts/interface.lua" />
        
            <pass class="compute" name="h0">
                <mode value="RUN_ONCE" />
                <material name="fft_h0" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
        
            <pass class="compute" name="pass_hkt">
                <material name="fft_hkt" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1/>
            </pass>
        
            <!--[> inverse fourier <]-->
            <!--[> inverse FFT horizontal pass <]-->
            <pass class="compute" name="ifftHorizontal"> 
                <preScript file="scripts/fft.lua" script="resetInverseFFT" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftHorizontal" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--[> inverse FFT vertical pass <]-->
            <pass class="compute" name="ifftVertical"> 
                <preScript file="scripts/fft.lua" script="resetInverseVertical" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftVertical" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--pass class="compute" name="mipmap">
                <testScript file="scripts/fft.lua" script="testMipmap" TEST_MODE="RUN_WHILE"/>
                <material name="mipmap" fromLibrary="Ocean" 
                    dimX=256 dimY=256 dimZ=1/>
            </pass-->

            <pass class="quad" name="skyTexture">
                <renderTarget name="sky" fromLibrary="Ocean"/>
                <material name="skyTexture" fromLibrary="atmos" />
            </pass>
                        
            <!--<pass class="quad" name="sky">-->
                <!--<viewport name="MainViewport" />-->
                <!--<material name="sky" fromLibrary="atmos" />-->
            <!--</pass>-->
            
            <pass class="mesh" name="renderGrid" >
                <preScript file="scripts/tess.lua" script="setTess4x" />
                <preProcess>
                    <texture name="hkt" fromLibrary="Ocean" MIPMAP=true />
                    <texture name="voronoi" fromLibrary="Ocean" MIPMAP=true />
                </preProcess>
                <COLOR_CLEAR value=false />
                <camera name="MainCamera" />
                <viewport name="MainViewport" />
                <lights>
                    <light name="Sun" />
                </lights>
                <materials>
                    <material name="meshInner128" fromLibrary="Ocean" count="3969" />
                    <material name="meshOuter128" fromLibrary="Ocean" count="3969" />
                </materials>
            </pass>

            <!--<pass class="default" name="ball" >-->
                <!--<COLOR_CLEAR value=false />-->
                <!--<DEPTH_CLEAR value=false />-->
                <!--<scenes>-->
                    <!--<scene name="Ball" />-->
                <!--</scenes>-->
                <!--<camera name="MainCamera" />-->
                <!--<viewport name="MainViewport" />-->
                <!--<lights>-->
                    <!--<light name="Sun" />-->
                <!--</lights>-->
                <!--<materialMaps>-->
                    <!--<map fromMaterial="sphere" toLibrary="Ocean" toMaterial="lambert" />-->
                <!--</materialMaps>-->
            
            <!--</pass>-->
            <!--[> render tessellated grid with height and disp maps: pos <]-->
            
            <!--[> ray trace for reflection, sky color.... <]-->
            
        </pipeline>

        <pipeline name="ocean_mesh (8x)" default="true" defaultCamera="MainCamera">
            <!--[> sky init script <]-->
            <preScript script="tChanged" file="scripts/interface.lua" />
        
            <pass class="compute" name="h0">
                <mode value="RUN_ONCE" />
                <material name="fft_h0" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
        
            <pass class="compute" name="pass_hkt">
                <material name="fft_hkt" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1/>
            </pass>
        
            <!--[> inverse fourier <]-->
            <!--[> inverse FFT horizontal pass <]-->
            <pass class="compute" name="ifftHorizontal"> 
                <preScript file="scripts/fft.lua" script="resetInverseFFT" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftHorizontal" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--[> inverse FFT vertical pass <]-->
            <pass class="compute" name="ifftVertical"> 
                <preScript file="scripts/fft.lua" script="resetInverseVertical" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftVertical" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--pass class="compute" name="mipmap">
                <testScript file="scripts/fft.lua" script="testMipmap" TEST_MODE="RUN_WHILE"/>
                <material name="mipmap" fromLibrary="Ocean" 
                    dimX=256 dimY=256 dimZ=1/>
            </pass-->

            <pass class="quad" name="skyTexture">
                <renderTarget name="sky" fromLibrary="Ocean"/>
                <material name="skyTexture" fromLibrary="atmos" />
            </pass>
                        
            <!--<pass class="quad" name="sky">-->
                <!--<viewport name="MainViewport" />-->
                <!--<material name="sky" fromLibrary="atmos" />-->
            <!--</pass>-->
            
            <pass class="mesh" name="renderGrid" >
                <preScript file="scripts/tess.lua" script="setTess8x" />
                <preProcess>
                    <texture name="hkt" fromLibrary="Ocean" MIPMAP=true />
                    <texture name="voronoi" fromLibrary="Ocean" MIPMAP=true />
                </preProcess>
                <COLOR_CLEAR value=false />
                <camera name="MainCamera" />
                <viewport name="MainViewport" />
                <lights>
                    <light name="Sun" />
                </lights>
                <materials>
                    <material name="meshInner128" fromLibrary="Ocean" count="961" />
                    <material name="meshOuter128" fromLibrary="Ocean" count="961" />
                </materials>
            </pass>

            <!--<pass class="default" name="ball" >-->
                <!--<COLOR_CLEAR value=false />-->
                <!--<DEPTH_CLEAR value=false />-->
                <!--<scenes>-->
                    <!--<scene name="Ball" />-->
                <!--</scenes>-->
                <!--<camera name="MainCamera" />-->
                <!--<viewport name="MainViewport" />-->
                <!--<lights>-->
                    <!--<light name="Sun" />-->
                <!--</lights>-->
                <!--<materialMaps>-->
                    <!--<map fromMaterial="sphere" toLibrary="Ocean" toMaterial="lambert" />-->
                <!--</materialMaps>-->
            
            <!--</pass>-->
            <!--[> render tessellated grid with height and disp maps: pos <]-->
            
            <!--[> ray trace for reflection, sky color.... <]-->
            
        </pipeline>
        
        <pipeline name="ocean_mesh (16x)" default="true" defaultCamera="MainCamera">
            <!--[> sky init script <]-->
            <preScript script="tChanged" file="scripts/interface.lua" />
        
            <pass class="compute" name="h0">
                <mode value="RUN_ONCE" />
                <material name="fft_h0" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
        
            <pass class="compute" name="pass_hkt">
                <material name="fft_hkt" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1/>
            </pass>
        
            <!--[> inverse fourier <]-->
            <!--[> inverse FFT horizontal pass <]-->
            <pass class="compute" name="ifftHorizontal"> 
                <preScript file="scripts/fft.lua" script="resetInverseFFT" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftHorizontal" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--[> inverse FFT vertical pass <]-->
            <pass class="compute" name="ifftVertical"> 
                <preScript file="scripts/fft.lua" script="resetInverseVertical" />
                <testScript file="scripts/fft.lua" script="fft" TEST_MODE="RUN_WHILE" />
                <material name="fftVertical" fromLibrary="Ocean" dimX="D8SIZE" dimY="D8SIZE" dimZ=1 />
            </pass>
            
            <!--pass class="compute" name="mipmap">
                <testScript file="scripts/fft.lua" script="testMipmap" TEST_MODE="RUN_WHILE"/>
                <material name="mipmap" fromLibrary="Ocean" 
                    dimX=256 dimY=256 dimZ=1/>
            </pass-->

            <pass class="quad" name="skyTexture">
                <renderTarget name="sky" fromLibrary="Ocean"/>
                <material name="skyTexture" fromLibrary="atmos" />
            </pass>
                        
            <!--<pass class="quad" name="sky">-->
                <!--<viewport name="MainViewport" />-->
                <!--<material name="sky" fromLibrary="atmos" />-->
            <!--</pass>-->
            
            <pass class="mesh" name="renderGrid" >
                <preScript file="scripts/tess.lua" script="setTess16x" />
                <preProcess>
                    <texture name="hkt" fromLibrary="Ocean" MIPMAP=true />
                    <texture name="voronoi" fromLibrary="Ocean" MIPMAP=true />
                </preProcess>
                <COLOR_CLEAR value=false />
                <camera name="MainCamera" />
                <viewport name="MainViewport" />
                <lights>
                    <light name="Sun" />
                </lights>
                <materials>
                    <material name="meshInner128" fromLibrary="Ocean" count="225" />
                    <material name="meshOuter128" fromLibrary="Ocean" count="225" />
                </materials>
            </pass>

            <!--<pass class="default" name="ball" >-->
                <!--<COLOR_CLEAR value=false />-->
                <!--<DEPTH_CLEAR value=false />-->
                <!--<scenes>-->
                    <!--<scene name="Ball" />-->
                <!--</scenes>-->
                <!--<camera name="MainCamera" />-->
                <!--<viewport name="MainViewport" />-->
                <!--<lights>-->
                    <!--<light name="Sun" />-->
                <!--</lights>-->
                <!--<materialMaps>-->
                    <!--<map fromMaterial="sphere" toLibrary="Ocean" toMaterial="lambert" />-->
                <!--</materialMaps>-->
            
            <!--</pass>-->
            <!--[> render tessellated grid with height and disp maps: pos <]-->
            
            <!--[> ray trace for reflection, sky color.... <]-->
            
        </pipeline>
        
	</pipelines>
	
	<interface>
		<window label="Ocean">
			<var label="Ball Scale" type="RENDERER" context="CURRENT"
			     component="ballScale"  />
				 
			<var label="L" type="RENDERER" context="CURRENT"
			     component="L" def="min=1 max=8192 step=1" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Random Dist." type="RENDERER" context="CURRENT"
				 component="randomDistribution" 
				 strings="Uniform,Normal,Log,Exp"
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>

			<var label="Spectrum" type="RENDERER" context="CURRENT"
				 component="spectrum" 
				 strings="Phillips,Pierson-Moskowitz,JONSWAP,Donelan J.,TMA,Unified,Pierson Moskowitz Hs,Bretschneider,Ochi,Ochi Hs"
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Dispersion" type="RENDERER" context="CURRENT"
				 component="dispersion" 
				 strings="Deep,Shallow,Capillary"
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Dir Spreading" type="RENDERER" context="CURRENT"
				 component="dirSpreading" 
				 strings="Cosine Power,Mitsuyasu,Hasselmann,Donelan-Banner,Horvath - Mitsuyasu,Horvath - Hasselman,Horvath - Donelan-Banner"
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="sp. scale" type="RENDERER" context="CURRENT"
			     component="spectrumScale" def="min=0.1 max=100 step=0.02" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Wind Dir" type="RENDERER" context="CURRENT"
			     component="windDir"  
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Wind Speed" type="RENDERER" context="CURRENT"
			     component="windSpeed" def="min=1 max=1000 step=1" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Chopiness" type="RENDERER" context="CURRENT"
			     component="choppyFactor" def="min=0 max=10 step=0.1" />

			<var label="Propagate Waves" type="RENDERER" context="CURRENT"
			     component="propagate"  def="min=0 max=1"
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Ocean Depth" type="RENDERER" context="CURRENT"
			     component="oceanDepth" def="min=0.1 max=1000 step=0.1" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Horvath Swell" type="RENDERER" context="CURRENT"
			     component="swell" def="min=0 max=1 step=0.01" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 

			<var label="JONSWAP fetch" type="RENDERER" context="CURRENT"
			     component="fetch" def="min=100000 max=10000000 step=10000" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="JONSWAP gamma" type="RENDERER" context="CURRENT"
			     component="JONSWAP_gamma" def="min=1 max=7 step=0.01" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="JONSWAP sigma A" type="RENDERER" context="CURRENT"
			     component="JONSWAP_sigmaA" def="min=0.001 max=5 step=0.001" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="JONSWAP sigma B" type="RENDERER" context="CURRENT"
			     component="JONSWAP_sigmaB" def="min=0.001 max=5 step=0.001" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Hs" type="RENDERER" context="CURRENT"
			     component="Hs" def="min=0.1 max=100 step=0.1" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Bretschneider wm" type="RENDERER" context="CURRENT"
			     component="Bretschneider_wm" def="min=0.001 max=5 step=0.001" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Ochi lambda1" type="RENDERER" context="CURRENT"
			     component="Ochi_lambda1" def="min=0.001 max=10 step=0.001" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Ochi Hs A" type="RENDERER" context="CURRENT"
			     component="Ochi_Hs1" def="min=0.1 max=100 step=0.1" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Ochi wm A" type="RENDERER" context="CURRENT"
			     component="Ochi_wm1" def="min=0.01 max=2 step=0.1" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Ochi lambda A" type="RENDERER" context="CURRENT"
			     component="Ochi_lambda2" def="min=0.001 max=10 step=0.001" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>

			<var label="Ochi Hs B" type="RENDERER" context="CURRENT"
			     component="Ochi_Hs2" def="min=0.1 max=100 step=0.1" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Ochi wm B" type="RENDERER" context="CURRENT"
			     component="Ochi_wm2" def="min=0.01 max=2 step=0.1" 
				 script="oceanConfigChanged" scriptFile="scripts/ocean.lua"/>
			
				 
			<var label="Ocean Type" type="RENDERER" context="CURRENT"
				 component="oceanType" def="min=1 max=10 step=1" 
				 script="oceanTypeChanged" scriptFile="scripts/ocean.lua"/>
				 
			<var label="Ocean Trans." type="RENDERER" context="CURRENT" 
				 component="oceanTrans"  /> 	 
		</window>


        <window label="Tessellation">
            <pipelineList label="Pipeline" />
            <var label="Camera Mode" type="RENDERER" context="CURRENT"
			     component="CamMode" />
			<var label="Culling" type="RENDERER" context="CURRENT"
			     component="Culling" def="min=0 max=1 step=1" />
            <var label="Max Tess." type="RENDERER" context="CURRENT"
                 component="MaxTessellationLvl"  />
			<var label="Adaptative Tess." type="RENDERER" context="CURRENT"
			     component="AdapTessellation"  />
			<var label="Grid Spacing" type="RENDERER" context="CURRENT"
			     component="GridSpacing" def="min=1 max=512 step=1" />
			<var label="Pixels per Edge" type="RENDERER" context="CURRENT"
			     component="PixelsPerEdge" def="min=1 max=512 step=1" />
		</window>
		
		<window label="Sky Config" >
			<var label="g" type="RENDERER" context="CURRENT" component="g" 
							def="min=-1 max=0.9999 step=0.001" />
			<var label="atm. pressure" type="RENDERER" context="CURRENT" component="pressure" 
							def="step=1" script="atmosConfigChanged" scriptFile="scripts/interface.lua"/>
			<var label="temp. (C)" type="RENDERER" context="CURRENT" component="temperature" 
							def="step=0.1" script="atmosConfigChanged" scriptFile="scripts/interface.lua"/>
			<var label="index of reftract." type="RENDERER" context="CURRENT" 
							component="indexOfRefraction" 
							def="min=1.00001 max=1.00200 step=0.00001" 
							script="atmosConfigChanged" scriptFile="scripts/interface.lua"/>
			<var label="wave lengths" type="RENDERER" context="CURRENT" component="waveLengths"  
							script="atmosConfigChanged" scriptFile="scripts/interface.lua"/>

		</window>	
		
		<window label="Algorithm" >
			<var label="cam. mode" type="RENDERER" context="CURRENT" component="cameraMode" 
							def="min=0 max=1 step=1" />
			<var label="exposure" type="RENDERER" context="CURRENT" component="exposure" 
							def="min=0.1 max=10 step=0.01" />
			<var label="steps" type="RENDERER" context="CURRENT" component="steps" 
							def="min=2 max=128 step=1" />
			<var label="light ray steps" type="RENDERER" context="CURRENT" 
							component="steps light ray" 
							def="min=2 max=128 step=1" />
			<var label="sampling" type="RENDERER" context="CURRENT" 
							component="sampling" 
							def="min=0 max=1" />
		</window>	

		<window label="Sun Position" >
			<var label="Year" type="RENDERER" context="CURRENT" component="year"  
					script="tChanged" scriptFile="scripts/interface.lua"/>
			<var label="Month" type="RENDERER" context="CURRENT" component="month" 
					def="min=1 max=12 step=1" script="tChanged" scriptFile="scripts/interface.lua"/>
			<var label="Day" type="RENDERER" context="CURRENT" component="day" 
					def="min=1 max=31 step=1" script="tChanged" scriptFile="scripts/interface.lua"/>
			<var label="Decimal Time" type="RENDERER" context="CURRENT" component="decimalHour" 
					def="step=0.01" script="tChanged" scriptFile="scripts/interface.lua"/>
			<var label="Latitude" type="RENDERER" context="CURRENT" component="latitude" 
					script="tChanged" scriptFile="scripts/interface.lua"/>
			<var label="Longitude" type="RENDERER" context="CURRENT" component="longitude" 
					script="tChanged" scriptFile="scripts/interface.lua"/>
			<var label="Meridian" type="RENDERER" context="CURRENT" component="meridian" 
					script="tChanged" scriptFile="scripts/interface.lua"/>
			<var label="sun angles" type="RENDERER" context="CURRENT" component="sunAngles" 
					def="readonly=true"/>
		</window>	
	</interface>	
	
</project>		
