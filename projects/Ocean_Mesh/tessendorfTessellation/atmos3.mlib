<?xml version="1.0" ?>
<materialLib name="atmos">

	<shaders>
		
		<shader name="sky" 		vs = "shaders/sky.vert" 
								ps = "shaders/sky3.frag" />

		<shader name="skyTexture" 	vs = "shaders/sky.vert" 
									ps = "shaders/skyTexture.frag" />
	</shaders>
	
	
	<materials>

		<material name="skyTexture">
			<color>
				<DIFFUSE r="0.4" g="0.4" b="0.8" a="1.0" />
			</color>
			<shader name="skyTexture">
				<values>
					<valueof uniform="m_pvm" 
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW_MODEL" />
					<value uniform="Hr"
							type="RENDERER" context="CURRENT"
							component="hr" />
					<value uniform="Hm"
							type="RENDERER" context="CURRENT"
							component="hm" />
					<value uniform="g"
							type="RENDERER" context="CURRENT"
							component="g" />
					<value uniform="betaR"
							type="RENDERER" context="CURRENT"
							component="betaR" />
					<value uniform="betaMf"
							type="RENDERER" context="CURRENT"
							component="betaM" />
					<value uniform="sunAngles"
							type="RENDERER" context="CURRENT"
							component="sunAngles" />
					<value uniform="camView"
							type="CAMERA" context="MainCamera"
							component="VIEW" />
					<value uniform="camUp"
							type="CAMERA" context="MainCamera"
							component="UP" />
					<value uniform="camPos"
							type="CAMERA" context="MainCamera"
							component="POSITION" />
					<value uniform="fov"
							type="CAMERA" context="MainCamera"
							component="FOV" />
					<value uniform="ratio"
							type="VIEWPORT" context="CURRENT"
							component="ABSOLUTE_RATIO" />
					<!--value uniform="cameraMode"
							type="RENDERER" context="CURRENT"
							component="cameraMode" />
					<value uniform="exposure"
							type="RENDERER" context="CURRENT"
							component="exposure" />
					<value uniform="divisions"
							type="RENDERER" context="CURRENT"
							component="steps" />
					<value uniform="divisionsLightRay"
							type="RENDERER" context="CURRENT"
							component="steps light ray" />
					<value uniform="sampling"
							type="RENDERER" context="CURRENT"
							component="sampling" /-->
				</values>
			</shader>

		</material>

		<material name="sky">
			<color>
				<DIFFUSE r="0.4" g="0.4" b="0.8" a="1.0" />
			</color>
			<shader name="sky">
				<values>
					<valueof uniform="m_pvm" 
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW_MODEL" />
					<value uniform="Hr"
							type="RENDERER" context="CURRENT"
							component="hr" />
					<value uniform="Hm"
							type="RENDERER" context="CURRENT"
							component="hm" />
					<value uniform="g"
							type="RENDERER" context="CURRENT"
							component="g" />
					<value uniform="betaR"
							type="RENDERER" context="CURRENT"
							component="betaR" />
					<value uniform="betaMf"
							type="RENDERER" context="CURRENT"
							component="betaM" />
					<value uniform="sunAngles"
							type="RENDERER" context="CURRENT"
							component="sunAngles" />
					<value uniform="camView"
							type="CAMERA" context="MainCamera"
							component="VIEW" />
					<value uniform="camUp"
							type="CAMERA" context="MainCamera"
							component="UP" />
					<value uniform="camPos"
							type="CAMERA" context="MainCamera"
							component="POSITION" />
					<value uniform="fov"
							type="CAMERA" context="MainCamera"
							component="FOV" />
					<value uniform="ratio"
							type="VIEWPORT" context="MainViewport"
							component="ABSOLUTE_RATIO" />
					<value uniform="cameraMode"
							type="RENDERER" context="CURRENT"
							component="cameraMode" />
					<value uniform="exposure"
							type="RENDERER" context="CURRENT"
							component="exposure" />
					<value uniform="divisions"
							type="RENDERER" context="CURRENT"
							component="steps" />
					<value uniform="divisionsLightRay"
							type="RENDERER" context="CURRENT"
							component="steps light ray" />
					<value uniform="sampling"
							type="RENDERER" context="CURRENT"
							component="sampling" />
				</values>
			</shader>

		</material>
		
	</materials>
</materialLib>
