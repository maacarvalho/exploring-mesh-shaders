<?xml version="1.0" ?>
<materialLib name="asteroidsMatLib">
    
    <textures>
        <texture name="asteroid_tex" filename="../../assets/asteroids/lods/asteroid.jpg" mipmap=true />
    </textures>

	<shaders>
        <shader name="meshShaders" 		ts = "shaders/asteroids.task"
                                        ms = "shaders/asteroids.mesh" 
										ps = "shaders/mesh.frag" />
		<!--<shader name="tradShaders" 		vs = "shaders/asteroids.vert" -->
										<!--gs = "shaders/asteroids.geom" -->
										<!--ps = "shaders/geom.frag" />-->
    </shaders>
   
	<buffers>
        <!-- Buffer that contains all the vertices of an object -->
		<buffer name="verticesBuffer0" >
            <file name="../../assets/asteroids/lods/asteroid_0.obj.vertices"/>
            <DIM x=44 y=1 z=1 />
			<structure>
				<field value="FLOAT" />
			</structure>
		</buffer>
        <!--Buffer that contains the normals of each vertex-->
        <buffer name="normalsBuffer0" >
            <file name="../../assets/asteroids/lods/asteroid_0.obj.normals"/>
            <DIM x=33 y=1 z=1 />
			<structure>
				<field value="FLOAT" />
			</structure>
		</buffer>
        <!--Buffer that contains the texture coordinates of each vertex-->
        <buffer name="texcoordsBuffer0" >
            <file name="../../assets/asteroids/lods/asteroid_0.obj.texcoords"/>
            <DIM x=33 y=1 z=1 />
			<structure>
				<field value="FLOAT" />
			</structure>
		</buffer>
		<!-- Buffer that contains the indices of the vertices of each meshlet -->
		<buffer name="indicesBuffer0" >
            <file name="../../assets/asteroids/lods/asteroid_0.obj.indices"/>
            <DIM x=11 y=1 z=1 />
			<structure>
				<field value="UINT" />
			</structure>
		</buffer>
		<!-- Buffer that contains the primitives (built with the indices) of each meshlet -->
		<buffer name="primitivesBuffer0" >
            <file name="../../assets/asteroids/lods/asteroid_0.obj.primitives"/>
            <DIM x=54 y=1 z=1 />
			<structure>
				<field value="UINT" />
			</structure>
		</buffer>
		<!-- Buffer that contains the boundaries of each meshlet in the indices' and primitives' buffer -->
		<buffer name="meshletsBuffer0" >
            <file name="../../assets/asteroids/lods/asteroid_0.obj.meshlets"/>
            <DIM x=4 y=1 z=1 />
			<structure>
				<field value="UINT" />
			</structure>
        </buffer>
    </buffers>	

	<materials>
		<material name="meshMat">

            <buffers>
                <buffer name="verticesBuffer0">
					<TYPE value="SHADER_STORAGE" />
    				<BINDING_POINT value="1" />
                </buffer>
                <buffer name="normalsBuffer0">
					<TYPE value="SHADER_STORAGE" />
    				<BINDING_POINT value="2" />
                </buffer>
                <buffer name="texcoordsBuffer0">
					<TYPE value="SHADER_STORAGE" />
    				<BINDING_POINT value="3" />
				</buffer>
				<buffer name="indicesBuffer0">
					<TYPE value="SHADER_STORAGE" />
    				<BINDING_POINT value="4" />
				</buffer>
				<buffer name="primitivesBuffer0">
					<TYPE value="SHADER_STORAGE" />
    				<BINDING_POINT value="5" />
				</buffer>
				<buffer name="meshletsBuffer0">
					<TYPE value="SHADER_STORAGE" />
    				<BINDING_POINT value="6" />
				</buffer>
            </buffers>

			<shader name="meshShaders" >
				<values>
					<valueof uniform="m_pvm" 
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW_MODEL" />
							 
					<valueof uniform="m_normal" 
							 type="RENDERER" context="CURRENT" 
							 component="NORMAL" />
							 
					<valueof uniform="m_view" 
							 type="RENDERER" context="CURRENT" 
							 component="VIEW" />
							 
					<valueof uniform="l_dir" 
							 type="LIGHT" context="Sun"
							 component="DIRECTION" />

                    <valueof uniform="scale" 
							 type="RENDERER" context="CURRENT"
                        component="SCALE" />

                    <valueof uniform="tex"
                             type="TEXTURE_BINDING" context="CURRENT"
                             component="UNIT" id=0 />
				</values>
            </shader>

            <textures>
                <texture name="asteroid_tex" UNIT=0 />
            </textures>

        </material>

		<!--<material name="tradMat">-->
			<!--<shader name="tradShaders" >-->
				<!--<values>-->
					<!--<valueof uniform="m_proj_view" -->
							 <!--type="RENDERER" context="CURRENT" -->
							 <!--component="PROJECTION_VIEW" />-->

					<!--<valueof uniform="m_model" -->
							 <!--type="RENDERER" context="CURRENT" -->
							 <!--component="MODEL" />-->
							 
					<!--<valueof uniform="m_normal" -->
							 <!--type="RENDERER" context="CURRENT" -->
							 <!--component="NORMAL" />-->
							 
					<!--<valueof uniform="m_view" -->
							 <!--type="RENDERER" context="CURRENT" -->
							 <!--component="VIEW" />-->
							 
					<!--<valueof uniform="l_dir" -->
							 <!--type="LIGHT" context="Sun"-->
							 <!--component="DIRECTION" />-->

					<!--<valueof uniform="scale" -->
							 <!--type="RENDERER" context="CURRENT"-->
							 <!--component="SCALE" />-->
				<!--</values>-->
			<!--</shader>-->
		<!--</material>-->
	</materials>
</materialLib>
