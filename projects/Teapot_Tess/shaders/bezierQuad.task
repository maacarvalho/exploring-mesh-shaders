#version 460
#extension GL_NV_mesh_shader : require
 
layout(local_size_x = 1) in;

taskNV out perTaskData {
  uint divs;
  uint patch_id;
};

uniform float level;

void main() {

    // Tessellation Levels
    int ceil_odd = int(ceil(level));
    ceil_odd += ceil_odd % 2;

    // Number of Vertices of the Quad
    int no_verts = (ceil_odd + 1) * (ceil_odd + 1);

    // Number of Mesh Shader WorkGroups to launch
    int mesh_wg_needed = int(ceil(no_verts / 256.0));
    for (int i=1; i<256; i++) {


        if ( pow(int(ceil(float(ceil_odd + 1) / float(i) + 1)), 2) <= 256 ) {
        //if ( i*i >= mesh_wg_needed * 2 ) {

            divs = i;
            break;
        }

    }

    //divs = 1;
    //gl_TaskCountNV = divs * divs;
    gl_TaskCountNV = divs * divs;
    patch_id = gl_WorkGroupID.x;
    //divs = 16;

}
