//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 optixLaunchParams[96];
.global .align 1 .b8 $str[45] = {61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 10, 0};
.global .align 1 .b8 $str1[23] = {78, 97, 117, 32, 82, 97, 121, 45, 84, 114, 97, 99, 105, 110, 103, 32, 68, 101, 98, 117, 103, 10, 0};
.global .align 1 .b8 $str2[24] = {76, 105, 103, 104, 116, 80, 111, 115, 58, 32, 37, 102, 44, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str3[19] = {76, 97, 117, 110, 99, 104, 32, 100, 105, 109, 58, 32, 37, 117, 32, 37, 117, 10, 0};
.global .align 1 .b8 $str4[29] = {82, 97, 121, 115, 32, 112, 101, 114, 32, 112, 105, 120, 101, 108, 32, 115, 113, 117, 97, 114, 101, 100, 58, 32, 37, 100, 32, 10, 0};

.visible .entry __closesthit__radiance(

)
{
	.local .align 4 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .f32 	%f<296>;
	.reg .b32 	%r<173>;
	.reg .f64 	%fd<76>;
	.reg .b64 	%rd<43>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd11, %SP, 0;
	add.u64 	%rd6, %SPL, 0;
	// inline asm
	call (%r35), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r36), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd12, %r35;
	shl.b64 	%rd13, %rd12, 32;
	cvt.u64.u32	%rd14, %r36;
	or.b64  	%rd1, %rd13, %rd14;
	// inline asm
	call (%rd10), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r37), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd15, [%rd10];
	mul.wide.s32 	%rd16, %r37, 12;
	add.s64 	%rd17, %rd15, %rd16;
	ld.u32 	%r38, [%rd17];
	ld.u32 	%r39, [%rd17+4];
	ld.u32 	%r40, [%rd17+8];
	// inline asm
	call (%f22, %f23), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f32, 0f3F800000;
	sub.ftz.f32 	%f33, %f32, %f22;
	sub.ftz.f32 	%f34, %f33, %f23;
	cvt.u64.u32	%rd3, %r38;
	ld.u64 	%rd18, [%rd10+16];
	mul.wide.u32 	%rd19, %r38, 16;
	add.s64 	%rd20, %rd18, %rd19;
	ld.v4.f32 	{%f35, %f36, %f37, %f38}, [%rd20];
	cvt.u64.u32	%rd4, %r39;
	mul.wide.u32 	%rd21, %r39, 16;
	add.s64 	%rd22, %rd18, %rd21;
	ld.v4.f32 	{%f42, %f43, %f44, %f45}, [%rd22];
	mul.ftz.f32 	%f49, %f22, %f42;
	mul.ftz.f32 	%f50, %f22, %f43;
	mul.ftz.f32 	%f51, %f22, %f44;
	fma.rn.ftz.f32 	%f52, %f35, %f34, %f49;
	fma.rn.ftz.f32 	%f53, %f36, %f34, %f50;
	fma.rn.ftz.f32 	%f54, %f37, %f34, %f51;
	cvt.u64.u32	%rd5, %r40;
	mul.wide.u32 	%rd23, %r40, 16;
	add.s64 	%rd24, %rd18, %rd23;
	ld.v4.f32 	{%f55, %f56, %f57, %f58}, [%rd24];
	fma.rn.ftz.f32 	%f62, %f23, %f55, %f52;
	fma.rn.ftz.f32 	%f63, %f23, %f56, %f53;
	fma.rn.ftz.f32 	%f64, %f23, %f57, %f54;
	// inline asm
	call (%f24), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f25), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f26), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f27), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f28), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f29), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f30), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f3, %f27, %f28, %f24;
	fma.rn.ftz.f32 	%f4, %f27, %f29, %f25;
	fma.rn.ftz.f32 	%f5, %f27, %f30, %f26;
	ld.const.u64 	%rd25, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.global.v4.f32 	{%f65, %f66, %f67, %f68}, [%rd26];
	sub.ftz.f32 	%f72, %f65, %f3;
	sub.ftz.f32 	%f6, %f66, %f4;
	sub.ftz.f32 	%f73, %f67, %f5;
	mul.ftz.f32 	%f7, %f6, %f6;
	fma.rn.ftz.f32 	%f74, %f72, %f72, %f7;
	fma.rn.ftz.f32 	%f75, %f73, %f73, %f74;
	rsqrt.approx.ftz.f32 	%f76, %f75;
	mul.ftz.f32 	%f77, %f72, %f76;
	mul.ftz.f32 	%f78, %f6, %f76;
	mul.ftz.f32 	%f79, %f73, %f76;
	mul.ftz.f32 	%f80, %f63, %f63;
	fma.rn.ftz.f32 	%f81, %f62, %f62, %f80;
	fma.rn.ftz.f32 	%f82, %f64, %f64, %f81;
	rsqrt.approx.ftz.f32 	%f83, %f82;
	mul.ftz.f32 	%f84, %f62, %f83;
	mul.ftz.f32 	%f85, %f63, %f83;
	mul.ftz.f32 	%f86, %f64, %f83;
	mul.ftz.f32 	%f87, %f78, %f85;
	fma.rn.ftz.f32 	%f88, %f77, %f84, %f87;
	fma.rn.ftz.f32 	%f89, %f79, %f86, %f88;
	mov.f32 	%f9, 0f00000000;
	max.ftz.f32 	%f8, %f89, %f9;
	mov.u32 	%r41, 1065353216;
	st.local.u32 	[%rd6], %r41;
	add.s64 	%rd7, %rd1, 12;
	ld.u32 	%r42, [%rd1+12];
	st.local.u32 	[%rd6+4], %r42;
	ld.global.u32 	%r1, [%rd26+16];
	setp.lt.s32	%p1, %r1, 1;
	@%p1 bra 	BB0_14;

	shr.u64 	%rd28, %rd11, 32;
	cvt.u32.u64	%r6, %rd11;
	cvt.u32.u64	%r5, %rd28;
	ld.const.u64 	%rd8, [optixLaunchParams+80];
	cvt.rn.f64.s32	%fd1, %r1;
	mov.f64 	%fd4, 0d0000000000000000;
	div.rn.f64 	%fd5, %fd4, %fd1;
	fma.rn.f64 	%fd2, %fd5, 0d3FD99999A0000000, 0dBFC999999999999A;
	mov.f32 	%f90, 0f00000000;
	mov.u32 	%r43, 0;
	mov.u32 	%r154, %r43;
	mov.f32 	%f9, %f90;

BB0_2:
	cvt.rn.f64.s32	%fd6, %r154;
	div.rn.f64 	%fd7, %fd6, %fd1;
	fma.rn.f64 	%fd3, %fd7, 0d3FD99999A0000000, 0dBFC999999999999A;
	and.b32  	%r49, %r1, 3;
	setp.eq.s32	%p2, %r49, 0;
	@%p2 bra 	BB0_3;

	setp.eq.s32	%p3, %r49, 1;
	@%p3 bra 	BB0_5;
	bra.uni 	BB0_6;

BB0_5:
	mov.u32 	%r160, %r43;
	bra.uni 	BB0_10;

BB0_3:
	mov.u32 	%r168, %r43;
	mov.f32 	%f293, %f9;
	mov.u32 	%r169, %r5;
	mov.u32 	%r170, %r6;
	mov.u32 	%r5, %r43;
	mov.u32 	%r6, %r43;
	mov.f32 	%f9, %f90;
	bra.uni 	BB0_11;

BB0_6:
	setp.eq.s32	%p4, %r49, 2;
	@%p4 bra 	BB0_7;
	bra.uni 	BB0_8;

BB0_7:
	mov.u32 	%r157, %r43;
	bra.uni 	BB0_9;

BB0_8:
	ld.u32 	%r60, [%rd7];
	mad.lo.s32 	%r61, %r60, 1664525, 1013904223;
	and.b32  	%r62, %r61, 16777215;
	cvt.rn.f32.u32	%f101, %r62;
	mov.f32 	%f102, 0f4B800000;
	div.approx.ftz.f32 	%f103, %f101, %f102;
	cvt.ftz.f64.f32	%fd8, %f103;
	div.rn.f64 	%fd9, %fd8, %fd1;
	fma.rn.f64 	%fd10, %fd9, 0d3FD999999999999A, %fd3;
	cvt.rn.ftz.f32.f64	%f104, %fd10;
	mad.lo.s32 	%r63, %r61, 1664525, 1013904223;
	st.u32 	[%rd7], %r63;
	and.b32  	%r64, %r63, 16777215;
	cvt.rn.f32.u32	%f105, %r64;
	div.approx.ftz.f32 	%f106, %f105, %f102;
	cvt.ftz.f64.f32	%fd11, %f106;
	div.rn.f64 	%fd12, %fd11, %fd1;
	fma.rn.f64 	%fd13, %fd12, 0d3FD999999999999A, %fd2;
	cvt.rn.ftz.f32.f64	%f107, %fd13;
	sub.ftz.f32 	%f108, %f104, %f3;
	sub.ftz.f32 	%f109, %f107, %f5;
	fma.rn.ftz.f32 	%f110, %f108, %f108, %f7;
	fma.rn.ftz.f32 	%f111, %f109, %f109, %f110;
	rsqrt.approx.ftz.f32 	%f112, %f111;
	mul.ftz.f32 	%f95, %f108, %f112;
	mul.ftz.f32 	%f96, %f6, %f112;
	mul.ftz.f32 	%f97, %f112, %f109;
	mov.u32 	%r52, 255;
	mov.u32 	%r53, 0;
	mov.u32 	%r55, 2;
	mov.u32 	%r157, 1;
	mov.f32 	%f98, 0f3727C5AC;
	mov.f32 	%f99, 0f41200000;
	mov.f32 	%f100, 0f00000000;
	// inline asm
	call (%r5, %r6), _optix_trace_2, (%rd8, %f3, %f4, %f5, %f95, %f96, %f97, %f98, %f99, %f100, %r52, %r53, %r157, %r55, %r157, %r5, %r6);
	// inline asm
	ld.local.f32 	%f113, [%rd6];
	add.ftz.f32 	%f9, %f9, %f113;

BB0_9:
	ld.u32 	%r74, [%rd7];
	mad.lo.s32 	%r75, %r74, 1664525, 1013904223;
	and.b32  	%r76, %r75, 16777215;
	cvt.rn.f32.u32	%f123, %r76;
	mov.f32 	%f124, 0f4B800000;
	div.approx.ftz.f32 	%f125, %f123, %f124;
	cvt.ftz.f64.f32	%fd14, %f125;
	div.rn.f64 	%fd15, %fd14, %fd1;
	fma.rn.f64 	%fd16, %fd15, 0d3FD999999999999A, %fd3;
	cvt.rn.ftz.f32.f64	%f126, %fd16;
	cvt.rn.f64.s32	%fd17, %r157;
	div.rn.f64 	%fd18, %fd17, %fd1;
	fma.rn.f64 	%fd19, %fd18, 0d3FD99999A0000000, 0dBFC999999999999A;
	mad.lo.s32 	%r77, %r75, 1664525, 1013904223;
	st.u32 	[%rd7], %r77;
	and.b32  	%r78, %r77, 16777215;
	cvt.rn.f32.u32	%f127, %r78;
	div.approx.ftz.f32 	%f128, %f127, %f124;
	cvt.ftz.f64.f32	%fd20, %f128;
	div.rn.f64 	%fd21, %fd20, %fd1;
	fma.rn.f64 	%fd22, %fd21, 0d3FD999999999999A, %fd19;
	cvt.rn.ftz.f32.f64	%f129, %fd22;
	sub.ftz.f32 	%f130, %f126, %f3;
	sub.ftz.f32 	%f131, %f129, %f5;
	fma.rn.ftz.f32 	%f132, %f130, %f130, %f7;
	fma.rn.ftz.f32 	%f133, %f131, %f131, %f132;
	rsqrt.approx.ftz.f32 	%f134, %f133;
	mul.ftz.f32 	%f117, %f130, %f134;
	mul.ftz.f32 	%f118, %f6, %f134;
	mul.ftz.f32 	%f119, %f134, %f131;
	mov.u32 	%r67, 255;
	mov.u32 	%r70, 2;
	mov.u32 	%r71, 1;
	mov.f32 	%f120, 0f3727C5AC;
	mov.f32 	%f121, 0f41200000;
	mov.f32 	%f122, 0f00000000;
	// inline asm
	call (%r5, %r6), _optix_trace_2, (%rd8, %f3, %f4, %f5, %f117, %f118, %f119, %f120, %f121, %f122, %r67, %r43, %r71, %r70, %r71, %r5, %r6);
	// inline asm
	ld.local.f32 	%f135, [%rd6];
	add.ftz.f32 	%f9, %f9, %f135;
	add.s32 	%r160, %r157, 1;

BB0_10:
	ld.u32 	%r88, [%rd7];
	mad.lo.s32 	%r89, %r88, 1664525, 1013904223;
	and.b32  	%r90, %r89, 16777215;
	cvt.rn.f32.u32	%f145, %r90;
	mov.f32 	%f146, 0f4B800000;
	div.approx.ftz.f32 	%f147, %f145, %f146;
	cvt.ftz.f64.f32	%fd23, %f147;
	div.rn.f64 	%fd24, %fd23, %fd1;
	fma.rn.f64 	%fd25, %fd24, 0d3FD999999999999A, %fd3;
	cvt.rn.ftz.f32.f64	%f148, %fd25;
	cvt.rn.f64.s32	%fd26, %r160;
	div.rn.f64 	%fd27, %fd26, %fd1;
	fma.rn.f64 	%fd28, %fd27, 0d3FD99999A0000000, 0dBFC999999999999A;
	mad.lo.s32 	%r91, %r89, 1664525, 1013904223;
	st.u32 	[%rd7], %r91;
	and.b32  	%r92, %r91, 16777215;
	cvt.rn.f32.u32	%f149, %r92;
	div.approx.ftz.f32 	%f150, %f149, %f146;
	cvt.ftz.f64.f32	%fd29, %f150;
	div.rn.f64 	%fd30, %fd29, %fd1;
	fma.rn.f64 	%fd31, %fd30, 0d3FD999999999999A, %fd28;
	cvt.rn.ftz.f32.f64	%f151, %fd31;
	sub.ftz.f32 	%f152, %f148, %f3;
	sub.ftz.f32 	%f153, %f151, %f5;
	fma.rn.ftz.f32 	%f154, %f152, %f152, %f7;
	fma.rn.ftz.f32 	%f155, %f153, %f153, %f154;
	rsqrt.approx.ftz.f32 	%f156, %f155;
	mul.ftz.f32 	%f139, %f152, %f156;
	mul.ftz.f32 	%f140, %f6, %f156;
	mul.ftz.f32 	%f141, %f156, %f153;
	mov.u32 	%r81, 255;
	mov.u32 	%r84, 2;
	mov.u32 	%r85, 1;
	mov.f32 	%f142, 0f3727C5AC;
	mov.f32 	%f143, 0f41200000;
	mov.f32 	%f144, 0f00000000;
	// inline asm
	call (%r169, %r170), _optix_trace_2, (%rd8, %f3, %f4, %f5, %f139, %f140, %f141, %f142, %f143, %f144, %r81, %r43, %r85, %r84, %r85, %r5, %r6);
	// inline asm
	ld.local.f32 	%f157, [%rd6];
	add.ftz.f32 	%f293, %f9, %f157;
	add.s32 	%r168, %r160, 1;
	mov.u32 	%r5, %r169;
	mov.u32 	%r6, %r170;
	mov.f32 	%f9, %f293;

BB0_11:
	setp.lt.u32	%p5, %r1, 4;
	@%p5 bra 	BB0_13;

BB0_12:
	ld.u32 	%r129, [%rd7];
	mad.lo.s32 	%r130, %r129, 1664525, 1013904223;
	and.b32  	%r131, %r130, 16777215;
	cvt.rn.f32.u32	%f194, %r131;
	mov.f32 	%f195, 0f4B800000;
	div.approx.ftz.f32 	%f196, %f194, %f195;
	cvt.ftz.f64.f32	%fd32, %f196;
	div.rn.f64 	%fd33, %fd32, %fd1;
	fma.rn.f64 	%fd34, %fd33, 0d3FD999999999999A, %fd3;
	cvt.rn.ftz.f32.f64	%f197, %fd34;
	cvt.rn.f64.s32	%fd35, %r168;
	div.rn.f64 	%fd36, %fd35, %fd1;
	fma.rn.f64 	%fd37, %fd36, 0d3FD99999A0000000, 0dBFC999999999999A;
	mad.lo.s32 	%r132, %r130, 1664525, 1013904223;
	st.u32 	[%rd7], %r132;
	and.b32  	%r133, %r132, 16777215;
	cvt.rn.f32.u32	%f198, %r133;
	div.approx.ftz.f32 	%f199, %f198, %f195;
	cvt.ftz.f64.f32	%fd38, %f199;
	div.rn.f64 	%fd39, %fd38, %fd1;
	fma.rn.f64 	%fd40, %fd39, 0d3FD999999999999A, %fd37;
	cvt.rn.ftz.f32.f64	%f200, %fd40;
	sub.ftz.f32 	%f201, %f197, %f3;
	sub.ftz.f32 	%f202, %f200, %f5;
	fma.rn.ftz.f32 	%f203, %f201, %f201, %f7;
	fma.rn.ftz.f32 	%f204, %f202, %f202, %f203;
	rsqrt.approx.ftz.f32 	%f205, %f204;
	mul.ftz.f32 	%f161, %f201, %f205;
	mul.ftz.f32 	%f162, %f6, %f205;
	mul.ftz.f32 	%f163, %f205, %f202;
	mov.u32 	%r122, 255;
	mov.u32 	%r123, 0;
	mov.u32 	%r125, 2;
	mov.u32 	%r126, 1;
	mov.f32 	%f191, 0f3727C5AC;
	mov.f32 	%f192, 0f41200000;
	mov.f32 	%f193, 0f00000000;
	// inline asm
	call (%r93, %r94), _optix_trace_2, (%rd8, %f3, %f4, %f5, %f161, %f162, %f163, %f191, %f192, %f193, %r122, %r123, %r126, %r125, %r126, %r169, %r170);
	// inline asm
	ld.local.f32 	%f206, [%rd6];
	add.ftz.f32 	%f207, %f293, %f206;
	ld.u32 	%r134, [%rd7];
	mad.lo.s32 	%r135, %r134, 1664525, 1013904223;
	and.b32  	%r136, %r135, 16777215;
	cvt.rn.f32.u32	%f208, %r136;
	div.approx.ftz.f32 	%f209, %f208, %f195;
	cvt.ftz.f64.f32	%fd41, %f209;
	div.rn.f64 	%fd42, %fd41, %fd1;
	fma.rn.f64 	%fd43, %fd42, 0d3FD999999999999A, %fd3;
	cvt.rn.ftz.f32.f64	%f210, %fd43;
	add.s32 	%r137, %r168, 1;
	cvt.rn.f64.s32	%fd44, %r137;
	div.rn.f64 	%fd45, %fd44, %fd1;
	fma.rn.f64 	%fd46, %fd45, 0d3FD99999A0000000, 0dBFC999999999999A;
	mad.lo.s32 	%r138, %r135, 1664525, 1013904223;
	st.u32 	[%rd7], %r138;
	and.b32  	%r139, %r138, 16777215;
	cvt.rn.f32.u32	%f211, %r139;
	div.approx.ftz.f32 	%f212, %f211, %f195;
	cvt.ftz.f64.f32	%fd47, %f212;
	div.rn.f64 	%fd48, %fd47, %fd1;
	fma.rn.f64 	%fd49, %fd48, 0d3FD999999999999A, %fd46;
	cvt.rn.ftz.f32.f64	%f213, %fd49;
	sub.ftz.f32 	%f214, %f210, %f3;
	sub.ftz.f32 	%f215, %f213, %f5;
	fma.rn.ftz.f32 	%f216, %f214, %f214, %f7;
	fma.rn.ftz.f32 	%f217, %f215, %f215, %f216;
	rsqrt.approx.ftz.f32 	%f218, %f217;
	mul.ftz.f32 	%f170, %f214, %f218;
	mul.ftz.f32 	%f171, %f6, %f218;
	mul.ftz.f32 	%f172, %f218, %f215;
	// inline asm
	call (%r102, %r103), _optix_trace_2, (%rd8, %f3, %f4, %f5, %f170, %f171, %f172, %f191, %f192, %f193, %r122, %r123, %r126, %r125, %r126, %r93, %r94);
	// inline asm
	ld.local.f32 	%f219, [%rd6];
	add.ftz.f32 	%f220, %f207, %f219;
	ld.u32 	%r140, [%rd7];
	mad.lo.s32 	%r141, %r140, 1664525, 1013904223;
	and.b32  	%r142, %r141, 16777215;
	cvt.rn.f32.u32	%f221, %r142;
	div.approx.ftz.f32 	%f222, %f221, %f195;
	cvt.ftz.f64.f32	%fd50, %f222;
	div.rn.f64 	%fd51, %fd50, %fd1;
	fma.rn.f64 	%fd52, %fd51, 0d3FD999999999999A, %fd3;
	cvt.rn.ftz.f32.f64	%f223, %fd52;
	add.s32 	%r143, %r168, 2;
	cvt.rn.f64.s32	%fd53, %r143;
	div.rn.f64 	%fd54, %fd53, %fd1;
	fma.rn.f64 	%fd55, %fd54, 0d3FD99999A0000000, 0dBFC999999999999A;
	mad.lo.s32 	%r144, %r141, 1664525, 1013904223;
	st.u32 	[%rd7], %r144;
	and.b32  	%r145, %r144, 16777215;
	cvt.rn.f32.u32	%f224, %r145;
	div.approx.ftz.f32 	%f225, %f224, %f195;
	cvt.ftz.f64.f32	%fd56, %f225;
	div.rn.f64 	%fd57, %fd56, %fd1;
	fma.rn.f64 	%fd58, %fd57, 0d3FD999999999999A, %fd55;
	cvt.rn.ftz.f32.f64	%f226, %fd58;
	sub.ftz.f32 	%f227, %f223, %f3;
	sub.ftz.f32 	%f228, %f226, %f5;
	fma.rn.ftz.f32 	%f229, %f227, %f227, %f7;
	fma.rn.ftz.f32 	%f230, %f228, %f228, %f229;
	rsqrt.approx.ftz.f32 	%f231, %f230;
	mul.ftz.f32 	%f179, %f227, %f231;
	mul.ftz.f32 	%f180, %f6, %f231;
	mul.ftz.f32 	%f181, %f231, %f228;
	// inline asm
	call (%r111, %r112), _optix_trace_2, (%rd8, %f3, %f4, %f5, %f179, %f180, %f181, %f191, %f192, %f193, %r122, %r123, %r126, %r125, %r126, %r102, %r103);
	// inline asm
	ld.local.f32 	%f232, [%rd6];
	add.ftz.f32 	%f233, %f220, %f232;
	ld.u32 	%r146, [%rd7];
	mad.lo.s32 	%r147, %r146, 1664525, 1013904223;
	and.b32  	%r148, %r147, 16777215;
	cvt.rn.f32.u32	%f234, %r148;
	div.approx.ftz.f32 	%f235, %f234, %f195;
	cvt.ftz.f64.f32	%fd59, %f235;
	div.rn.f64 	%fd60, %fd59, %fd1;
	fma.rn.f64 	%fd61, %fd60, 0d3FD999999999999A, %fd3;
	cvt.rn.ftz.f32.f64	%f236, %fd61;
	add.s32 	%r149, %r168, 3;
	cvt.rn.f64.s32	%fd62, %r149;
	div.rn.f64 	%fd63, %fd62, %fd1;
	fma.rn.f64 	%fd64, %fd63, 0d3FD99999A0000000, 0dBFC999999999999A;
	mad.lo.s32 	%r150, %r147, 1664525, 1013904223;
	st.u32 	[%rd7], %r150;
	and.b32  	%r151, %r150, 16777215;
	cvt.rn.f32.u32	%f237, %r151;
	div.approx.ftz.f32 	%f238, %f237, %f195;
	cvt.ftz.f64.f32	%fd65, %f238;
	div.rn.f64 	%fd66, %fd65, %fd1;
	fma.rn.f64 	%fd67, %fd66, 0d3FD999999999999A, %fd64;
	cvt.rn.ftz.f32.f64	%f239, %fd67;
	sub.ftz.f32 	%f240, %f236, %f3;
	sub.ftz.f32 	%f241, %f239, %f5;
	fma.rn.ftz.f32 	%f242, %f240, %f240, %f7;
	fma.rn.ftz.f32 	%f243, %f241, %f241, %f242;
	rsqrt.approx.ftz.f32 	%f244, %f243;
	mul.ftz.f32 	%f188, %f240, %f244;
	mul.ftz.f32 	%f189, %f6, %f244;
	mul.ftz.f32 	%f190, %f244, %f241;
	// inline asm
	call (%r169, %r170), _optix_trace_2, (%rd8, %f3, %f4, %f5, %f188, %f189, %f190, %f191, %f192, %f193, %r122, %r123, %r126, %r125, %r126, %r111, %r112);
	// inline asm
	ld.local.f32 	%f245, [%rd6];
	add.ftz.f32 	%f293, %f233, %f245;
	add.s32 	%r168, %r168, 4;
	setp.lt.s32	%p6, %r168, %r1;
	mov.f32 	%f9, %f293;
	mov.u32 	%r5, %r169;
	mov.u32 	%r6, %r170;
	@%p6 bra 	BB0_12;

BB0_13:
	add.s32 	%r154, %r154, 1;
	setp.lt.s32	%p7, %r154, %r1;
	@%p7 bra 	BB0_2;

BB0_14:
	mul.lo.s32 	%r152, %r1, %r1;
	cvt.rn.f32.s32	%f246, %r152;
	div.approx.ftz.f32 	%f21, %f9, %f246;
	ld.u32 	%r153, [%rd10+48];
	setp.eq.s32	%p8, %r153, 0;
	@%p8 bra 	BB0_17;

	ld.u64 	%rd9, [%rd10+24];
	setp.eq.s64	%p9, %rd9, 0;
	@%p9 bra 	BB0_17;

	mov.f32 	%f287, 0f3F800000;
	sub.ftz.f32 	%f286, %f287, %f22;
	sub.ftz.f32 	%f285, %f286, %f23;
	shl.b64 	%rd36, %rd3, 4;
	add.s64 	%rd37, %rd9, %rd36;
	ld.v2.f32 	{%f247, %f248}, [%rd37];
	shl.b64 	%rd38, %rd4, 4;
	add.s64 	%rd39, %rd9, %rd38;
	ld.v2.f32 	{%f254, %f255}, [%rd39];
	mul.ftz.f32 	%f258, %f22, %f254;
	mul.ftz.f32 	%f259, %f22, %f255;
	fma.rn.ftz.f32 	%f260, %f285, %f247, %f258;
	fma.rn.ftz.f32 	%f261, %f285, %f248, %f259;
	shl.b64 	%rd40, %rd5, 4;
	add.s64 	%rd41, %rd9, %rd40;
	ld.v2.f32 	{%f262, %f263}, [%rd41];
	fma.rn.ftz.f32 	%f266, %f23, %f262, %f260;
	fma.rn.ftz.f32 	%f267, %f23, %f263, %f261;
	ld.u64 	%rd42, [%rd10+56];
	tex.2d.v4.f32.f32	{%f268, %f269, %f270, %f271}, [%rd42, {%f266, %f267}];
	mul.ftz.f32 	%f272, %f8, %f21;
	cvt.ftz.f64.f32	%fd68, %f272;
	add.f64 	%fd69, %fd68, 0d0000000000000000;
	mov.f64 	%fd70, 0d3FF0000000000000;
	min.f64 	%fd71, %fd69, %fd70;
	cvt.rn.ftz.f32.f64	%f273, %fd71;
	mul.ftz.f32 	%f274, %f273, %f268;
	mul.ftz.f32 	%f275, %f273, %f269;
	mul.ftz.f32 	%f276, %f273, %f270;
	st.f32 	[%rd1], %f274;
	st.f32 	[%rd1+4], %f275;
	st.f32 	[%rd1+8], %f276;
	bra.uni 	BB0_18;

BB0_17:
	mul.ftz.f32 	%f277, %f8, %f21;
	cvt.ftz.f64.f32	%fd72, %f277;
	add.f64 	%fd73, %fd72, 0d0000000000000000;
	mov.f64 	%fd74, 0d3FF0000000000000;
	min.f64 	%fd75, %fd73, %fd74;
	cvt.rn.ftz.f32.f64	%f278, %fd75;
	ld.f32 	%f279, [%rd10+64];
	mul.ftz.f32 	%f280, %f279, %f278;
	ld.f32 	%f281, [%rd10+68];
	mul.ftz.f32 	%f282, %f278, %f281;
	ld.f32 	%f283, [%rd10+72];
	mul.ftz.f32 	%f284, %f278, %f283;
	st.f32 	[%rd1], %f280;
	st.f32 	[%rd1+4], %f282;
	st.f32 	[%rd1+8], %f284;

BB0_18:
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__shadow
.visible .entry __closesthit__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__anyhit__shadow
.visible .entry __anyhit__shadow(

)
{



	ret;
}

	// .globl	__miss__shadow
.visible .entry __miss__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__closesthit__light
.visible .entry __closesthit__light(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1065353216;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__anyhit__light
.visible .entry __anyhit__light(

)
{



	ret;
}

	// .globl	__miss__light
.visible .entry __miss__light(

)
{



	ret;
}

	// .globl	__closesthit__light_shadow
.visible .entry __closesthit__light_shadow(

)
{
	.reg .f32 	%f<71>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<16>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd2, [%rd1];
	mul.wide.s32 	%rd3, %r1, 12;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u32 	%r4, [%rd4];
	ld.u32 	%r5, [%rd4+4];
	ld.u32 	%r6, [%rd4+8];
	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f10, 0f3F800000;
	sub.ftz.f32 	%f11, %f10, %f1;
	sub.ftz.f32 	%f12, %f11, %f2;
	ld.u64 	%rd5, [%rd1+16];
	mul.wide.u32 	%rd6, %r4, 16;
	add.s64 	%rd7, %rd5, %rd6;
	ld.v4.f32 	{%f13, %f14, %f15, %f16}, [%rd7];
	mul.wide.u32 	%rd8, %r5, 16;
	add.s64 	%rd9, %rd5, %rd8;
	ld.v4.f32 	{%f20, %f21, %f22, %f23}, [%rd9];
	mul.ftz.f32 	%f27, %f1, %f20;
	mul.ftz.f32 	%f28, %f1, %f21;
	mul.ftz.f32 	%f29, %f1, %f22;
	fma.rn.ftz.f32 	%f30, %f13, %f12, %f27;
	fma.rn.ftz.f32 	%f31, %f14, %f12, %f28;
	fma.rn.ftz.f32 	%f32, %f15, %f12, %f29;
	mul.wide.u32 	%rd10, %r6, 16;
	add.s64 	%rd11, %rd5, %rd10;
	ld.v4.f32 	{%f33, %f34, %f35, %f36}, [%rd11];
	fma.rn.ftz.f32 	%f40, %f2, %f33, %f30;
	fma.rn.ftz.f32 	%f41, %f2, %f34, %f31;
	fma.rn.ftz.f32 	%f42, %f2, %f35, %f32;
	// inline asm
	call (%f3), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f6), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f8), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f9), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f43, %f6, %f7, %f3;
	fma.rn.ftz.f32 	%f44, %f6, %f8, %f4;
	fma.rn.ftz.f32 	%f45, %f6, %f9, %f5;
	mul.ftz.f32 	%f46, %f41, %f41;
	fma.rn.ftz.f32 	%f47, %f40, %f40, %f46;
	fma.rn.ftz.f32 	%f48, %f42, %f42, %f47;
	rsqrt.approx.ftz.f32 	%f49, %f48;
	mul.ftz.f32 	%f50, %f40, %f49;
	mul.ftz.f32 	%f51, %f41, %f49;
	mul.ftz.f32 	%f52, %f42, %f49;
	sub.ftz.f32 	%f53, %f43, %f3;
	sub.ftz.f32 	%f54, %f44, %f4;
	sub.ftz.f32 	%f55, %f45, %f5;
	mul.ftz.f32 	%f56, %f54, %f54;
	fma.rn.ftz.f32 	%f57, %f53, %f53, %f56;
	fma.rn.ftz.f32 	%f58, %f55, %f55, %f57;
	rsqrt.approx.ftz.f32 	%f59, %f58;
	mul.ftz.f32 	%f60, %f59, %f53;
	mul.ftz.f32 	%f61, %f59, %f54;
	mul.ftz.f32 	%f62, %f59, %f55;
	mul.ftz.f32 	%f63, %f50, %f60;
	mul.ftz.f32 	%f64, %f51, %f61;
	neg.ftz.f32 	%f65, %f64;
	sub.ftz.f32 	%f66, %f65, %f63;
	mul.ftz.f32 	%f67, %f52, %f62;
	sub.ftz.f32 	%f68, %f66, %f67;
	mov.f32 	%f69, 0f00000000;
	max.ftz.f32 	%f70, %f69, %f68;
	// inline asm
	call (%r2), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd12, %r2;
	shl.b64 	%rd13, %rd12, 32;
	cvt.u64.u32	%rd14, %r3;
	or.b64  	%rd15, %rd13, %rd14;
	st.f32 	[%rd15], %f70;
	ret;
}

	// .globl	__anyhit__light_shadow
.visible .entry __anyhit__light_shadow(

)
{



	ret;
}

	// .globl	__miss__light_shadow
.visible .entry __miss__light_shadow(

)
{



	ret;
}

	// .globl	__closesthit__phong_metal
.visible .entry __closesthit__phong_metal(

)
{
	.local .align 4 .b8 	__local_depot12[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<74>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<21>;


	mov.u64 	%SPL, __local_depot12;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd3, %SP, 0;
	add.u64 	%rd4, %SPL, 0;
	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd5, [%rd1];
	mul.wide.s32 	%rd6, %r1, 12;
	add.s64 	%rd7, %rd5, %rd6;
	ld.u32 	%r13, [%rd7];
	ld.u32 	%r14, [%rd7+4];
	ld.u32 	%r15, [%rd7+8];
	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f19, 0f3F800000;
	sub.ftz.f32 	%f20, %f19, %f1;
	sub.ftz.f32 	%f21, %f20, %f2;
	ld.u64 	%rd8, [%rd1+16];
	mul.wide.u32 	%rd9, %r13, 16;
	add.s64 	%rd10, %rd8, %rd9;
	ld.v4.f32 	{%f22, %f23, %f24, %f25}, [%rd10];
	mov.u32 	%r10, 0;
	mov.u32 	%r9, 2;
	mul.wide.u32 	%rd11, %r14, 16;
	add.s64 	%rd12, %rd8, %rd11;
	ld.v4.f32 	{%f29, %f30, %f31, %f32}, [%rd12];
	mul.ftz.f32 	%f36, %f1, %f29;
	mul.ftz.f32 	%f37, %f1, %f30;
	mul.ftz.f32 	%f38, %f1, %f31;
	fma.rn.ftz.f32 	%f39, %f22, %f21, %f36;
	fma.rn.ftz.f32 	%f40, %f23, %f21, %f37;
	fma.rn.ftz.f32 	%f41, %f24, %f21, %f38;
	mul.wide.u32 	%rd13, %r15, 16;
	add.s64 	%rd14, %rd8, %rd13;
	ld.v4.f32 	{%f42, %f43, %f44, %f45}, [%rd14];
	fma.rn.ftz.f32 	%f49, %f2, %f42, %f39;
	fma.rn.ftz.f32 	%f50, %f2, %f43, %f40;
	fma.rn.ftz.f32 	%f51, %f2, %f44, %f41;
	mul.ftz.f32 	%f52, %f50, %f50;
	fma.rn.ftz.f32 	%f53, %f49, %f49, %f52;
	fma.rn.ftz.f32 	%f54, %f51, %f51, %f53;
	rsqrt.approx.ftz.f32 	%f55, %f54;
	mul.ftz.f32 	%f56, %f49, %f55;
	mul.ftz.f32 	%f57, %f50, %f55;
	mul.ftz.f32 	%f58, %f51, %f55;
	// inline asm
	call (%r2), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd15, %r2;
	shl.b64 	%rd16, %rd15, 32;
	cvt.u64.u32	%rd17, %r3;
	mov.u64 	%rd18, 1065353216;
	st.local.u32 	[%rd4+4], %rd18;
	st.local.u32 	[%rd4], %rd18;
	mov.u32 	%r16, 1065353216;
	st.local.u32 	[%rd4+8], %r16;
	or.b64  	%rd19, %rd16, %rd17;
	ld.u32 	%r17, [%rd19+12];
	st.local.u32 	[%rd4+12], %r17;
	shr.u64 	%rd20, %rd3, 32;
	cvt.u32.u64	%r11, %rd20;
	cvt.u32.u64	%r12, %rd3;
	// inline asm
	call (%f3), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f6), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f8), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f9), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f10, %f6, %f7, %f3;
	fma.rn.ftz.f32 	%f11, %f6, %f8, %f4;
	fma.rn.ftz.f32 	%f12, %f6, %f9, %f5;
	add.ftz.f32 	%f59, %f56, %f56;
	add.ftz.f32 	%f60, %f57, %f57;
	add.ftz.f32 	%f61, %f58, %f58;
	mul.ftz.f32 	%f62, %f57, %f8;
	fma.rn.ftz.f32 	%f63, %f56, %f7, %f62;
	fma.rn.ftz.f32 	%f64, %f58, %f9, %f63;
	mul.ftz.f32 	%f65, %f59, %f64;
	mul.ftz.f32 	%f66, %f60, %f64;
	mul.ftz.f32 	%f67, %f61, %f64;
	sub.ftz.f32 	%f13, %f7, %f65;
	sub.ftz.f32 	%f14, %f8, %f66;
	sub.ftz.f32 	%f15, %f9, %f67;
	ld.const.u64 	%rd2, [optixLaunchParams+80];
	mov.u32 	%r6, 255;
	mov.f32 	%f16, 0f3D23D70A;
	mov.f32 	%f17, 0f60AD78EC;
	mov.f32 	%f18, 0f00000000;
	// inline asm
	call (%r4, %r5), _optix_trace_2, (%rd2, %f10, %f11, %f12, %f13, %f14, %f15, %f16, %f17, %f18, %r6, %r10, %r10, %r9, %r10, %r11, %r12);
	// inline asm
	ld.local.f32 	%f68, [%rd4];
	mul.ftz.f32 	%f69, %f68, 0f3F4CCCCD;
	ld.local.f32 	%f70, [%rd4+4];
	mul.ftz.f32 	%f71, %f70, 0f3F4CCCCD;
	ld.local.f32 	%f72, [%rd4+8];
	mul.ftz.f32 	%f73, %f72, 0f3F4CCCCD;
	st.f32 	[%rd19], %f69;
	st.f32 	[%rd19+4], %f71;
	st.f32 	[%rd19+8], %f73;
	ret;
}

	// .globl	__closesthit__phong_glass
.visible .entry __closesthit__phong_glass(

)
{
	.local .align 4 .b8 	__local_depot13[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .f32 	%f<163>;
	.reg .b32 	%r<29>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot13;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%rd5), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd6, [%rd5];
	mul.wide.s32 	%rd7, %r1, 12;
	add.s64 	%rd8, %rd6, %rd7;
	ld.u32 	%r2, [%rd8];
	ld.u32 	%r3, [%rd8+4];
	ld.u32 	%r4, [%rd8+8];
	// inline asm
	call (%f31, %f32), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f36, 0f3F800000;
	sub.ftz.f32 	%f37, %f36, %f31;
	sub.ftz.f32 	%f38, %f37, %f32;
	ld.u64 	%rd9, [%rd5+16];
	mul.wide.u32 	%rd10, %r2, 16;
	add.s64 	%rd11, %rd9, %rd10;
	ld.v4.f32 	{%f39, %f40, %f41, %f42}, [%rd11];
	mul.wide.u32 	%rd12, %r3, 16;
	add.s64 	%rd13, %rd9, %rd12;
	ld.v4.f32 	{%f46, %f47, %f48, %f49}, [%rd13];
	mul.ftz.f32 	%f53, %f31, %f46;
	mul.ftz.f32 	%f54, %f31, %f47;
	mul.ftz.f32 	%f55, %f31, %f48;
	fma.rn.ftz.f32 	%f56, %f39, %f38, %f53;
	fma.rn.ftz.f32 	%f57, %f40, %f38, %f54;
	fma.rn.ftz.f32 	%f58, %f41, %f38, %f55;
	mul.wide.u32 	%rd14, %r4, 16;
	add.s64 	%rd15, %rd9, %rd14;
	ld.v4.f32 	{%f59, %f60, %f61, %f62}, [%rd15];
	fma.rn.ftz.f32 	%f66, %f32, %f59, %f56;
	fma.rn.ftz.f32 	%f67, %f32, %f60, %f57;
	fma.rn.ftz.f32 	%f68, %f32, %f61, %f58;
	mul.ftz.f32 	%f69, %f67, %f67;
	fma.rn.ftz.f32 	%f70, %f66, %f66, %f69;
	fma.rn.ftz.f32 	%f71, %f68, %f68, %f70;
	rsqrt.approx.ftz.f32 	%f72, %f71;
	mul.ftz.f32 	%f1, %f66, %f72;
	mul.ftz.f32 	%f2, %f67, %f72;
	mul.ftz.f32 	%f3, %f68, %f72;
	// inline asm
	call (%f33), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f34), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f35), _optix_get_world_ray_direction_z, ();
	// inline asm
	mul.ftz.f32 	%f7, %f1, %f33;
	mul.ftz.f32 	%f8, %f2, %f34;
	add.ftz.f32 	%f73, %f7, %f8;
	mul.ftz.f32 	%f9, %f3, %f35;
	add.ftz.f32 	%f10, %f9, %f73;
	setp.lt.ftz.f32	%p1, %f10, 0f00000000;
	@%p1 bra 	BB13_4;
	bra.uni 	BB13_1;

BB13_4:
	neg.ftz.f32 	%f95, %f8;
	sub.ftz.f32 	%f96, %f95, %f7;
	sub.ftz.f32 	%f162, %f96, %f9;
	mul.ftz.f32 	%f97, %f10, %f10;
	cvt.ftz.f64.f32	%fd5, %f97;
	mov.f64 	%fd6, 0d3FF0000000000000;
	sub.f64 	%fd7, %fd6, %fd5;
	fma.rn.f64 	%fd8, %fd7, 0dBFDBE0DF00000000, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64	%f20, %fd8;
	setp.lt.ftz.f32	%p3, %f20, 0f00000000;
	mov.f32 	%f159, 0f00000000;
	@%p3 bra 	BB13_5;
	bra.uni 	BB13_6;

BB13_5:
	mov.f32 	%f160, %f159;
	mov.f32 	%f161, %f159;
	bra.uni 	BB13_7;

BB13_1:
	neg.ftz.f32 	%f11, %f1;
	mul.ftz.f32 	%f78, %f33, %f11;
	neg.ftz.f32 	%f12, %f2;
	mul.ftz.f32 	%f79, %f34, %f2;
	sub.ftz.f32 	%f80, %f78, %f79;
	neg.ftz.f32 	%f13, %f3;
	mul.ftz.f32 	%f81, %f35, %f3;
	sub.ftz.f32 	%f14, %f80, %f81;
	mul.ftz.f32 	%f82, %f14, %f14;
	cvt.ftz.f64.f32	%fd1, %f82;
	mov.f64 	%fd2, 0d3FF0000000000000;
	sub.f64 	%fd3, %fd2, %fd1;
	fma.rn.f64 	%fd4, %fd3, 0dC002000000000000, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64	%f15, %fd4;
	setp.lt.ftz.f32	%p2, %f15, 0f00000000;
	mov.f32 	%f162, 0f00000000;
	@%p2 bra 	BB13_2;
	bra.uni 	BB13_3;

BB13_2:
	mov.f32 	%f159, %f162;
	mov.f32 	%f160, %f162;
	mov.f32 	%f161, %f162;
	bra.uni 	BB13_7;

BB13_6:
	mul.ftz.f32 	%f98, %f33, 0f3F28F5C3;
	sqrt.approx.ftz.f32 	%f99, %f20;
	fma.rn.ftz.f32 	%f100, %f10, 0f3F28F5C3, %f99;
	mul.ftz.f32 	%f101, %f1, %f100;
	mul.ftz.f32 	%f102, %f2, %f100;
	mul.ftz.f32 	%f103, %f3, %f100;
	sub.ftz.f32 	%f159, %f98, %f101;
	mul.ftz.f32 	%f104, %f34, 0f3F28F5C3;
	sub.ftz.f32 	%f160, %f104, %f102;
	mul.ftz.f32 	%f105, %f35, 0f3F28F5C3;
	sub.ftz.f32 	%f161, %f105, %f103;
	bra.uni 	BB13_7;

BB13_3:
	mul.ftz.f32 	%f84, %f33, 0f3FC00000;
	sqrt.approx.ftz.f32 	%f85, %f15;
	fma.rn.ftz.f32 	%f86, %f14, 0f3FC00000, %f85;
	mul.ftz.f32 	%f87, %f86, %f11;
	mul.ftz.f32 	%f88, %f86, %f12;
	mul.ftz.f32 	%f89, %f86, %f13;
	sub.ftz.f32 	%f159, %f84, %f87;
	mul.ftz.f32 	%f90, %f34, 0f3FC00000;
	sub.ftz.f32 	%f160, %f90, %f88;
	mul.ftz.f32 	%f91, %f35, 0f3FC00000;
	sub.ftz.f32 	%f161, %f91, %f89;

BB13_7:
	// inline asm
	call (%f106), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f107), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f108), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f109), _optix_get_ray_tmax, ();
	// inline asm
	fma.rn.ftz.f32 	%f28, %f33, %f109, %f106;
	fma.rn.ftz.f32 	%f29, %f34, %f109, %f107;
	fma.rn.ftz.f32 	%f30, %f35, %f109, %f108;
	// inline asm
	call (%r5), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd16, %r5;
	shl.b64 	%rd17, %rd16, 32;
	cvt.u64.u32	%rd18, %r6;
	or.b64  	%rd1, %rd17, %rd18;
	add.u64 	%rd19, %SP, 16;
	add.u64 	%rd2, %SPL, 16;
	mov.u64 	%rd20, 0;
	st.local.u32 	[%rd2+4], %rd20;
	st.local.u32 	[%rd2], %rd20;
	mov.u32 	%r7, 0;
	st.local.u32 	[%rd2+8], %r7;
	add.s64 	%rd3, %rd1, 12;
	ld.u32 	%r8, [%rd1+12];
	st.local.u32 	[%rd2+12], %r8;
	mul.ftz.f32 	%f110, %f160, %f160;
	fma.rn.ftz.f32 	%f111, %f159, %f159, %f110;
	fma.rn.ftz.f32 	%f112, %f161, %f161, %f111;
	sqrt.approx.ftz.f32 	%f113, %f112;
	setp.leu.ftz.f32	%p4, %f113, 0f00000000;
	@%p4 bra 	BB13_9;

	shr.u64 	%rd23, %rd19, 32;
	cvt.u32.u64	%r17, %rd19;
	cvt.u32.u64	%r16, %rd23;
	ld.const.u64 	%rd21, [optixLaunchParams+80];
	mov.u32 	%r11, 255;
	mov.u32 	%r14, 2;
	mov.f32 	%f120, 0f3727C5AC;
	mov.f32 	%f121, 0f60AD78EC;
	mov.f32 	%f122, 0f00000000;
	// inline asm
	call (%r9, %r10), _optix_trace_2, (%rd21, %f28, %f29, %f30, %f159, %f160, %f161, %f120, %f121, %f122, %r11, %r7, %r7, %r14, %r7, %r16, %r17);
	// inline asm

BB13_9:
	add.u64 	%rd24, %SP, 0;
	add.u64 	%rd4, %SPL, 0;
	st.local.u32 	[%rd4+4], %rd20;
	st.local.u32 	[%rd4], %rd20;
	st.local.u32 	[%rd4+8], %r7;
	ld.u32 	%r19, [%rd3];
	st.local.u32 	[%rd4+12], %r19;
	setp.gt.ftz.f32	%p5, %f162, 0f00000000;
	@%p5 bra 	BB13_11;
	bra.uni 	BB13_10;

BB13_11:
	add.ftz.f32 	%f133, %f1, %f1;
	mul.ftz.f32 	%f134, %f133, %f10;
	add.ftz.f32 	%f135, %f2, %f2;
	mul.ftz.f32 	%f136, %f135, %f10;
	add.ftz.f32 	%f137, %f3, %f3;
	mul.ftz.f32 	%f138, %f137, %f10;
	sub.ftz.f32 	%f127, %f33, %f134;
	sub.ftz.f32 	%f128, %f34, %f136;
	sub.ftz.f32 	%f129, %f35, %f138;
	shr.u64 	%rd30, %rd24, 32;
	cvt.u32.u64	%r27, %rd30;
	cvt.u32.u64	%r28, %rd24;
	ld.const.u64 	%rd28, [optixLaunchParams+80];
	mov.u32 	%r22, 255;
	mov.u32 	%r25, 2;
	mov.f32 	%f130, 0f3727C5AC;
	mov.f32 	%f131, 0f60AD78EC;
	mov.f32 	%f132, 0f00000000;
	// inline asm
	call (%r20, %r21), _optix_trace_2, (%rd28, %f28, %f29, %f30, %f127, %f128, %f129, %f130, %f131, %f132, %r22, %r7, %r7, %r25, %r7, %r27, %r28);
	// inline asm
	sub.ftz.f32 	%f140, %f36, %f162;
	lg2.approx.ftz.f32 	%f141, %f140;
	mul.ftz.f32 	%f142, %f141, 0f40A00000;
	ex2.approx.ftz.f32 	%f143, %f142;
	sub.ftz.f32 	%f144, %f36, 0f3D23D70B;
	fma.rn.ftz.f32 	%f145, %f143, %f144, 0f3D23D70B;
	sub.ftz.f32 	%f146, %f36, %f145;
	ld.local.f32 	%f147, [%rd2];
	ld.local.f32 	%f148, [%rd2+4];
	ld.local.f32 	%f149, [%rd2+8];
	ld.local.f32 	%f150, [%rd4];
	mul.ftz.f32 	%f151, %f145, %f150;
	ld.local.f32 	%f152, [%rd4+4];
	mul.ftz.f32 	%f153, %f145, %f152;
	ld.local.f32 	%f154, [%rd4+8];
	mul.ftz.f32 	%f155, %f145, %f154;
	fma.rn.ftz.f32 	%f156, %f147, %f146, %f151;
	fma.rn.ftz.f32 	%f157, %f148, %f146, %f153;
	fma.rn.ftz.f32 	%f158, %f149, %f146, %f155;
	st.f32 	[%rd1], %f156;
	st.f32 	[%rd1+4], %f157;
	st.f32 	[%rd1+8], %f158;
	bra.uni 	BB13_12;

BB13_10:
	ld.local.u32 	%rd26, [%rd2];
	ld.local.f32 	%f123, [%rd2+8];
	ld.local.u32 	%rd27, [%rd2+4];
	st.u32 	[%rd1+4], %rd27;
	st.u32 	[%rd1], %rd26;
	st.f32 	[%rd1+8], %f123;

BB13_12:
	ret;
}

	// .globl	__anyhit__phong_glass
.visible .entry __anyhit__phong_glass(

)
{



	ret;
}

	// .globl	__miss__phong_glass
.visible .entry __miss__phong_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__shadow_glass
.visible .entry __closesthit__shadow_glass(

)
{
	.local .align 4 .b8 	__local_depot16[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<9>;


	mov.u64 	%SPL, __local_depot16;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd4, %r1;
	shl.b64 	%rd5, %rd4, 32;
	cvt.u64.u32	%rd6, %r2;
	mov.u32 	%r12, 1065353216;
	st.local.u32 	[%rd3], %r12;
	or.b64  	%rd7, %rd5, %rd6;
	ld.u32 	%r13, [%rd7+4];
	st.local.u32 	[%rd3+4], %r13;
	shr.u64 	%rd8, %rd2, 32;
	cvt.u32.u64	%r10, %rd8;
	cvt.u32.u64	%r11, %rd2;
	// inline asm
	call (%f1), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f2), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f3), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f6), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f8, %f4, %f5, %f1;
	fma.rn.ftz.f32 	%f9, %f4, %f6, %f2;
	fma.rn.ftz.f32 	%f10, %f4, %f7, %f3;
	ld.const.u64 	%rd1, [optixLaunchParams+80];
	mov.u32 	%r5, 255;
	mov.u32 	%r6, 0;
	mov.u32 	%r8, 2;
	mov.u32 	%r9, 1;
	mov.f32 	%f14, 0f3C23D70A;
	mov.f32 	%f15, 0f60AD78EC;
	mov.f32 	%f16, 0f00000000;
	// inline asm
	call (%r3, %r4), _optix_trace_2, (%rd1, %f8, %f9, %f10, %f5, %f6, %f7, %f14, %f15, %f16, %r5, %r6, %r9, %r8, %r9, %r10, %r11);
	// inline asm
	ld.local.f32 	%f17, [%rd3];
	mul.ftz.f32 	%f18, %f17, 0f3F733333;
	st.f32 	[%rd7], %f18;
	ret;
}

	// .globl	__anyhit__shadow_glass
.visible .entry __anyhit__shadow_glass(

)
{



	ret;
}

	// .globl	__miss__shadow_glass
.visible .entry __miss__shadow_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 16 .b8 	__local_depot19[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<118>;
	.reg .b32 	%r<117>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<27>;


	mov.u64 	%SPL, __local_depot19;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r10), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r11), _optix_get_launch_index_y, ();
	// inline asm
	ld.const.u32 	%r13, [optixLaunchParams];
	or.b32  	%r14, %r13, %r10;
	or.b32  	%r15, %r14, %r11;
	setp.eq.s32	%p1, %r15, 0;
	@%p1 bra 	BB19_2;

	ld.const.u32 	%r114, [optixLaunchParams+16];
	bra.uni 	BB19_3;

BB19_2:
	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 0
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.const.u64 	%rd9, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd10, %rd9;
	ld.global.v4.f32 	{%f36, %f37, %f38, %f39}, [%rd10];
	cvt.ftz.f64.f32	%fd1, %f37;
	cvt.ftz.f64.f32	%fd2, %f36;
	add.u64 	%rd11, %SP, 16;
	add.u64 	%rd12, %SPL, 16;
	st.local.v2.f64 	[%rd12], {%fd2, %fd1};
	cvt.ftz.f64.f32	%fd3, %f39;
	cvt.ftz.f64.f32	%fd4, %f38;
	st.local.v2.f64 	[%rd12+16], {%fd4, %fd3};
	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 2
	// inline asm
	call (%r17), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r16), _optix_get_launch_dimension_x, ();
	// inline asm
	st.local.v2.u32 	[%rd12], {%r16, %r17};
	mov.u64 	%rd15, $str3;
	cvta.global.u64 	%rd16, %rd15;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.const.u32 	%r114, [optixLaunchParams+16];
	st.local.u32 	[%rd12], %r114;
	mov.u64 	%rd17, $str4;
	cvta.global.u64 	%rd18, %rd17;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 4
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r24, [retval0+0];
	
	//{
	}// Callseq End 5

BB19_3:
	add.u64 	%rd19, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u64 	%rd20, 1065353216;
	st.local.u32 	[%rd1+4], %rd20;
	st.local.u32 	[%rd1], %rd20;
	mov.u32 	%r25, 1065353216;
	st.local.u32 	[%rd1+8], %r25;
	cvt.rn.f32.s32	%f1, %r114;
	rcp.approx.ftz.f32 	%f2, %f1;
	mov.f32 	%f112, 0f00000000;
	setp.leu.ftz.f32	%p2, %f1, 0f00000000;
	mov.f32 	%f113, %f112;
	mov.f32 	%f114, %f112;
	@%p2 bra 	BB19_8;

	cvt.rn.f32.s32	%f3, %r10;
	cvt.rn.f32.s32	%f4, %r11;
	ld.const.v2.f32 	{%f51, %f52}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f53, %f54}, [optixLaunchParams+56];
	ld.const.f32 	%f9, [optixLaunchParams+36];
	ld.const.v2.f32 	{%f55, %f56}, [optixLaunchParams+40];
	ld.const.v2.f32 	{%f57, %f58}, [optixLaunchParams+64];
	ld.const.u64 	%rd3, [optixLaunchParams+80];
	mul.ftz.f32 	%f14, %f1, %f1;
	mov.f32 	%f50, 0f00000000;
	mov.u32 	%r26, 0;
	ld.const.v2.f32 	{%f60, %f61}, [optixLaunchParams+24];
	ld.const.f32 	%f23, [optixLaunchParams+32];
	// inline asm
	call (%r28), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r29), _optix_get_launch_dimension_y, ();
	// inline asm
	mov.f32 	%f107, %f50;
	mov.u32 	%r115, %r26;
	mov.f32 	%f112, %f50;
	mov.f32 	%f113, %f50;
	mov.f32 	%f114, %f50;

BB19_5:
	mul.ftz.f32 	%f19, %f1, %f107;
	mul.ftz.f32 	%f20, %f2, %f107;
	mov.f32 	%f111, %f50;
	mov.u32 	%r116, %r26;

BB19_6:
	mad.lo.s32 	%r40, %r28, %r10, %r11;
	add.ftz.f32 	%f71, %f19, %f111;
	cvt.rzi.ftz.u32.f32	%r41, %f71;
	shl.b32 	%r42, %r41, 4;
	add.s32 	%r43, %r42, -1556008596;
	add.s32 	%r44, %r41, -1640531527;
	shr.u32 	%r45, %r41, 5;
	add.s32 	%r46, %r45, -939442524;
	xor.b32  	%r47, %r43, %r44;
	xor.b32  	%r48, %r47, %r46;
	add.s32 	%r49, %r40, %r48;
	shl.b32 	%r50, %r49, 4;
	add.s32 	%r51, %r50, -1383041155;
	add.s32 	%r52, %r49, -1640531527;
	xor.b32  	%r53, %r51, %r52;
	shr.u32 	%r54, %r49, 5;
	add.s32 	%r55, %r54, 2123724318;
	xor.b32  	%r56, %r53, %r55;
	add.s32 	%r57, %r56, %r41;
	shl.b32 	%r58, %r57, 4;
	add.s32 	%r59, %r58, -1556008596;
	add.s32 	%r60, %r57, 1013904242;
	shr.u32 	%r61, %r57, 5;
	add.s32 	%r62, %r61, -939442524;
	xor.b32  	%r63, %r59, %r60;
	xor.b32  	%r64, %r63, %r62;
	add.s32 	%r65, %r64, %r49;
	shl.b32 	%r66, %r65, 4;
	add.s32 	%r67, %r66, -1383041155;
	add.s32 	%r68, %r65, 1013904242;
	xor.b32  	%r69, %r67, %r68;
	shr.u32 	%r70, %r65, 5;
	add.s32 	%r71, %r70, 2123724318;
	xor.b32  	%r72, %r69, %r71;
	add.s32 	%r73, %r72, %r57;
	shl.b32 	%r74, %r73, 4;
	add.s32 	%r75, %r74, -1556008596;
	add.s32 	%r76, %r73, -626627285;
	shr.u32 	%r77, %r73, 5;
	add.s32 	%r78, %r77, -939442524;
	xor.b32  	%r79, %r75, %r76;
	xor.b32  	%r80, %r79, %r78;
	add.s32 	%r81, %r80, %r65;
	shl.b32 	%r82, %r81, 4;
	add.s32 	%r83, %r82, -1383041155;
	add.s32 	%r84, %r81, -626627285;
	xor.b32  	%r85, %r83, %r84;
	shr.u32 	%r86, %r81, 5;
	add.s32 	%r87, %r86, 2123724318;
	xor.b32  	%r88, %r85, %r87;
	add.s32 	%r89, %r88, %r73;
	shl.b32 	%r90, %r89, 4;
	add.s32 	%r91, %r90, -1556008596;
	add.s32 	%r92, %r89, 2027808484;
	shr.u32 	%r93, %r89, 5;
	add.s32 	%r94, %r93, -939442524;
	xor.b32  	%r95, %r91, %r92;
	xor.b32  	%r96, %r95, %r94;
	add.s32 	%r97, %r96, %r81;
	st.local.u32 	[%rd1+12], %r97;
	mad.lo.s32 	%r98, %r97, 1664525, 1013904223;
	and.b32  	%r99, %r98, 16777215;
	cvt.rn.f32.u32	%f72, %r99;
	mov.f32 	%f73, 0f4B800000;
	div.approx.ftz.f32 	%f74, %f72, %f73;
	fma.rn.ftz.f32 	%f75, %f2, %f74, %f20;
	mad.lo.s32 	%r100, %r98, 1664525, 7271263;
	and.b32  	%r101, %r100, 16777215;
	cvt.rn.f32.u32	%f76, %r101;
	div.approx.ftz.f32 	%f77, %f76, %f73;
	mul.ftz.f32 	%f78, %f2, %f77;
	fma.rn.ftz.f32 	%f79, %f2, %f111, %f78;
	add.ftz.f32 	%f80, %f3, %f75;
	add.ftz.f32 	%f81, %f4, %f79;
	cvt.rn.f32.u32	%f82, %r28;
	cvt.rn.f32.u32	%f83, %r29;
	div.approx.ftz.f32 	%f84, %f80, %f82;
	div.approx.ftz.f32 	%f85, %f81, %f83;
	fma.rn.ftz.f32 	%f86, %f84, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f87, %f85, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f88, %f51, %f86, %f9;
	fma.rn.ftz.f32 	%f89, %f86, %f52, %f55;
	fma.rn.ftz.f32 	%f90, %f86, %f53, %f56;
	fma.rn.ftz.f32 	%f91, %f87, %f54, %f88;
	fma.rn.ftz.f32 	%f92, %f87, %f57, %f89;
	fma.rn.ftz.f32 	%f93, %f87, %f58, %f90;
	mul.ftz.f32 	%f94, %f92, %f92;
	fma.rn.ftz.f32 	%f95, %f91, %f91, %f94;
	fma.rn.ftz.f32 	%f96, %f93, %f93, %f95;
	rsqrt.approx.ftz.f32 	%f97, %f96;
	mul.ftz.f32 	%f65, %f91, %f97;
	mul.ftz.f32 	%f66, %f92, %f97;
	mul.ftz.f32 	%f67, %f93, %f97;
	shr.u64 	%rd22, %rd19, 32;
	cvt.u32.u64	%r38, %rd22;
	cvt.u32.u64	%r39, %rd19;
	mov.u32 	%r33, 255;
	mov.u32 	%r36, 2;
	mov.f32 	%f69, 0f60AD78EC;
	// inline asm
	call (%r31, %r32), _optix_trace_2, (%rd3, %f60, %f61, %f23, %f65, %f66, %f67, %f50, %f69, %f50, %r33, %r26, %r26, %r36, %r26, %r38, %r39);
	// inline asm
	ld.local.f32 	%f98, [%rd1];
	div.approx.ftz.f32 	%f99, %f98, %f14;
	add.ftz.f32 	%f114, %f114, %f99;
	ld.local.f32 	%f100, [%rd1+4];
	div.approx.ftz.f32 	%f101, %f100, %f14;
	add.ftz.f32 	%f112, %f112, %f101;
	ld.local.f32 	%f102, [%rd1+8];
	div.approx.ftz.f32 	%f103, %f102, %f14;
	add.ftz.f32 	%f113, %f113, %f103;
	add.s32 	%r116, %r116, 1;
	cvt.rn.f32.s32	%f111, %r116;
	setp.lt.ftz.f32	%p3, %f111, %f1;
	@%p3 bra 	BB19_6;

	add.s32 	%r115, %r115, 1;
	cvt.rn.f32.s32	%f107, %r115;
	setp.lt.ftz.f32	%p4, %f107, %f1;
	@%p4 bra 	BB19_5;

BB19_8:
	mul.ftz.f32 	%f104, %f114, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r105, %f104;
	mul.ftz.f32 	%f105, %f112, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r106, %f105;
	mul.ftz.f32 	%f106, %f113, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r107, %f106;
	shl.b32 	%r108, %r106, 8;
	shl.b32 	%r109, %r107, 16;
	or.b32  	%r110, %r105, %r108;
	or.b32  	%r111, %r110, %r109;
	or.b32  	%r112, %r111, -16777216;
	// inline asm
	call (%r102), _optix_get_launch_dimension_x, ();
	// inline asm
	mad.lo.s32 	%r113, %r102, %r11, %r10;
	ld.const.u64 	%rd23, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd24, %rd23;
	mul.wide.u32 	%rd25, %r113, 4;
	add.s64 	%rd26, %rd24, %rd25;
	st.global.u32 	[%rd26], %r112;
	ret;
}


