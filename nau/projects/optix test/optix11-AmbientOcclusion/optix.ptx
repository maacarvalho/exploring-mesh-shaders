//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 optixLaunchParams[96];
.global .align 1 .b8 $str[45] = {61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 10, 0};
.global .align 1 .b8 $str1[23] = {78, 97, 117, 32, 82, 97, 121, 45, 84, 114, 97, 99, 105, 110, 103, 32, 68, 101, 98, 117, 103, 10, 0};
.global .align 1 .b8 $str2[24] = {76, 105, 103, 104, 116, 80, 111, 115, 58, 32, 37, 102, 44, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str3[19] = {76, 97, 117, 110, 99, 104, 32, 100, 105, 109, 58, 32, 37, 117, 32, 37, 117, 10, 0};
.global .align 1 .b8 $str4[29] = {82, 97, 121, 115, 32, 112, 101, 114, 32, 112, 105, 120, 101, 108, 32, 115, 113, 117, 97, 114, 101, 100, 58, 32, 37, 100, 32, 10, 0};

.visible .entry __closesthit__radiance(

)
{
	.local .align 4 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .f32 	%f<339>;
	.reg .b32 	%r<149>;
	.reg .b64 	%rd<35>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd7, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	// inline asm
	call (%r26), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r27), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd8, %r26;
	shl.b64 	%rd9, %rd8, 32;
	cvt.u64.u32	%rd10, %r27;
	or.b64  	%rd1, %rd9, %rd10;
	// inline asm
	call (%rd6), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r28), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd11, [%rd6];
	mul.wide.s32 	%rd12, %r28, 12;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u32 	%r29, [%rd13];
	ld.u32 	%r30, [%rd13+4];
	ld.u32 	%r31, [%rd13+8];
	// inline asm
	call (%f22, %f23), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f32, 0f3F800000;
	sub.ftz.f32 	%f33, %f32, %f22;
	sub.ftz.f32 	%f34, %f33, %f23;
	ld.u64 	%rd14, [%rd6+16];
	mul.wide.u32 	%rd15, %r29, 16;
	add.s64 	%rd16, %rd14, %rd15;
	ld.v4.f32 	{%f35, %f36, %f37, %f38}, [%rd16];
	mul.wide.u32 	%rd17, %r30, 16;
	add.s64 	%rd18, %rd14, %rd17;
	ld.v4.f32 	{%f42, %f43, %f44, %f45}, [%rd18];
	mul.ftz.f32 	%f49, %f22, %f42;
	mul.ftz.f32 	%f50, %f22, %f43;
	mul.ftz.f32 	%f51, %f22, %f44;
	fma.rn.ftz.f32 	%f52, %f35, %f34, %f49;
	fma.rn.ftz.f32 	%f53, %f36, %f34, %f50;
	fma.rn.ftz.f32 	%f54, %f34, %f37, %f51;
	mul.wide.u32 	%rd19, %r31, 16;
	add.s64 	%rd20, %rd14, %rd19;
	ld.v4.f32 	{%f55, %f56, %f57, %f58}, [%rd20];
	fma.rn.ftz.f32 	%f62, %f23, %f55, %f52;
	fma.rn.ftz.f32 	%f63, %f23, %f56, %f53;
	fma.rn.ftz.f32 	%f64, %f23, %f57, %f54;
	// inline asm
	call (%f24), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f25), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f26), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f27), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f28), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f29), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f30), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f1, %f27, %f28, %f24;
	fma.rn.ftz.f32 	%f2, %f27, %f29, %f25;
	fma.rn.ftz.f32 	%f3, %f27, %f30, %f26;
	mul.ftz.f32 	%f65, %f63, %f63;
	fma.rn.ftz.f32 	%f66, %f62, %f62, %f65;
	fma.rn.ftz.f32 	%f67, %f64, %f64, %f66;
	rsqrt.approx.ftz.f32 	%f68, %f67;
	mul.ftz.f32 	%f4, %f62, %f68;
	mul.ftz.f32 	%f5, %f63, %f68;
	mul.ftz.f32 	%f6, %f64, %f68;
	ld.const.u64 	%rd21, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd22, %rd21;
	add.s64 	%rd2, %rd22, 16;
	ld.global.u32 	%r1, [%rd22+16];
	mov.u32 	%r32, 1065353216;
	st.local.u32 	[%rd3], %r32;
	add.s64 	%rd4, %rd1, 12;
	ld.u32 	%r33, [%rd1+12];
	st.local.u32 	[%rd3+4], %r33;
	mov.f32 	%f338, 0f00000000;
	setp.lt.s32	%p1, %r1, 1;
	@%p1 bra 	BB0_11;

	shr.u64 	%rd24, %rd7, 32;
	cvt.u32.u64	%r145, %rd7;
	cvt.u32.u64	%r144, %rd24;
	abs.ftz.f32 	%f72, %f6;
	abs.ftz.f32 	%f73, %f4;
	setp.gt.ftz.f32	%p2, %f73, %f72;
	selp.f32	%f74, 0f00000000, %f5, %p2;
	neg.ftz.f32 	%f75, %f6;
	selp.f32	%f76, %f4, %f75, %p2;
	neg.ftz.f32 	%f77, %f5;
	selp.f32	%f78, %f77, 0f00000000, %p2;
	mul.ftz.f32 	%f79, %f76, %f76;
	fma.rn.ftz.f32 	%f80, %f78, %f78, %f79;
	fma.rn.ftz.f32 	%f81, %f74, %f74, %f80;
	rsqrt.approx.ftz.f32 	%f82, %f81;
	mul.ftz.f32 	%f7, %f78, %f82;
	mul.ftz.f32 	%f8, %f76, %f82;
	mul.ftz.f32 	%f9, %f74, %f82;
	mul.ftz.f32 	%f83, %f6, %f8;
	mul.ftz.f32 	%f84, %f5, %f9;
	sub.ftz.f32 	%f85, %f83, %f84;
	mul.ftz.f32 	%f86, %f4, %f9;
	mul.ftz.f32 	%f87, %f6, %f7;
	sub.ftz.f32 	%f88, %f86, %f87;
	mul.ftz.f32 	%f89, %f5, %f7;
	mul.ftz.f32 	%f90, %f4, %f8;
	sub.ftz.f32 	%f91, %f89, %f90;
	mul.ftz.f32 	%f92, %f88, %f88;
	fma.rn.ftz.f32 	%f93, %f85, %f85, %f92;
	fma.rn.ftz.f32 	%f94, %f91, %f91, %f93;
	rsqrt.approx.ftz.f32 	%f95, %f94;
	mul.ftz.f32 	%f10, %f95, %f85;
	mul.ftz.f32 	%f11, %f95, %f88;
	mul.ftz.f32 	%f12, %f95, %f91;
	ld.const.u64 	%rd5, [optixLaunchParams+80];
	and.b32  	%r37, %r1, 3;
	mov.f32 	%f338, 0f00000000;
	mov.u32 	%r36, 1;
	mov.u32 	%r143, 0;
	setp.eq.s32	%p3, %r37, 0;
	@%p3 bra 	BB0_9;

	setp.eq.s32	%p4, %r37, 1;
	@%p4 bra 	BB0_3;
	bra.uni 	BB0_4;

BB0_3:
	mov.u32 	%r140, %r143;
	mov.f32 	%f335, %f338;
	bra.uni 	BB0_8;

BB0_4:
	setp.eq.s32	%p5, %r37, 2;
	@%p5 bra 	BB0_5;
	bra.uni 	BB0_6;

BB0_5:
	mov.u32 	%r140, %r36;
	mov.f32 	%f334, %f338;
	bra.uni 	BB0_7;

BB0_6:
	ld.u32 	%r48, [%rd4];
	mad.lo.s32 	%r49, %r48, 1664525, 1013904223;
	and.b32  	%r50, %r49, 16777215;
	cvt.rn.f32.u32	%f105, %r50;
	mov.f32 	%f106, 0f4B800000;
	div.approx.ftz.f32 	%f107, %f105, %f106;
	mad.lo.s32 	%r51, %r49, 1664525, 1013904223;
	st.u32 	[%rd4], %r51;
	and.b32  	%r52, %r51, 16777215;
	cvt.rn.f32.u32	%f108, %r52;
	div.approx.ftz.f32 	%f109, %f108, %f106;
	sqrt.approx.ftz.f32 	%f110, %f107;
	mul.ftz.f32 	%f111, %f109, 0f40C90FDB;
	cos.approx.ftz.f32 	%f112, %f111;
	mul.ftz.f32 	%f113, %f110, %f112;
	sin.approx.ftz.f32 	%f114, %f111;
	mul.ftz.f32 	%f115, %f110, %f114;
	mul.ftz.f32 	%f116, %f115, %f115;
	sub.ftz.f32 	%f118, %f32, %f116;
	mul.ftz.f32 	%f119, %f113, %f113;
	sub.ftz.f32 	%f120, %f118, %f119;
	mov.f32 	%f104, 0f00000000;
	max.ftz.f32 	%f121, %f104, %f120;
	sqrt.approx.ftz.f32 	%f122, %f121;
	mul.ftz.f32 	%f123, %f113, %f10;
	mul.ftz.f32 	%f124, %f113, %f11;
	mul.ftz.f32 	%f125, %f113, %f12;
	fma.rn.ftz.f32 	%f126, %f115, %f7, %f123;
	fma.rn.ftz.f32 	%f127, %f115, %f8, %f124;
	fma.rn.ftz.f32 	%f128, %f115, %f9, %f125;
	fma.rn.ftz.f32 	%f99, %f4, %f122, %f126;
	fma.rn.ftz.f32 	%f100, %f5, %f122, %f127;
	fma.rn.ftz.f32 	%f101, %f6, %f122, %f128;
	ld.global.f32 	%f103, [%rd2+4];
	mov.u32 	%r40, 255;
	mov.u32 	%r41, 0;
	mov.u32 	%r140, 2;
	mov.u32 	%r44, 1;
	mov.f32 	%f102, 0f3C23D70A;
	// inline asm
	call (%r144, %r145), _optix_trace_2, (%rd5, %f1, %f2, %f3, %f99, %f100, %f101, %f102, %f103, %f104, %r40, %r41, %r44, %r140, %r44, %r144, %r145);
	// inline asm
	ld.local.f32 	%f129, [%rd3];
	add.ftz.f32 	%f334, %f129, 0f00000000;

BB0_7:
	ld.u32 	%r62, [%rd4];
	mad.lo.s32 	%r63, %r62, 1664525, 1013904223;
	and.b32  	%r64, %r63, 16777215;
	cvt.rn.f32.u32	%f139, %r64;
	mov.f32 	%f140, 0f4B800000;
	div.approx.ftz.f32 	%f141, %f139, %f140;
	mad.lo.s32 	%r65, %r63, 1664525, 1013904223;
	st.u32 	[%rd4], %r65;
	and.b32  	%r66, %r65, 16777215;
	cvt.rn.f32.u32	%f142, %r66;
	div.approx.ftz.f32 	%f143, %f142, %f140;
	sqrt.approx.ftz.f32 	%f144, %f141;
	mul.ftz.f32 	%f145, %f143, 0f40C90FDB;
	cos.approx.ftz.f32 	%f146, %f145;
	mul.ftz.f32 	%f147, %f144, %f146;
	sin.approx.ftz.f32 	%f148, %f145;
	mul.ftz.f32 	%f149, %f144, %f148;
	mul.ftz.f32 	%f150, %f149, %f149;
	sub.ftz.f32 	%f152, %f32, %f150;
	mul.ftz.f32 	%f153, %f147, %f147;
	sub.ftz.f32 	%f154, %f152, %f153;
	max.ftz.f32 	%f155, %f338, %f154;
	sqrt.approx.ftz.f32 	%f156, %f155;
	mul.ftz.f32 	%f157, %f147, %f10;
	mul.ftz.f32 	%f158, %f147, %f11;
	mul.ftz.f32 	%f159, %f147, %f12;
	fma.rn.ftz.f32 	%f160, %f149, %f7, %f157;
	fma.rn.ftz.f32 	%f161, %f149, %f8, %f158;
	fma.rn.ftz.f32 	%f162, %f149, %f9, %f159;
	fma.rn.ftz.f32 	%f133, %f4, %f156, %f160;
	fma.rn.ftz.f32 	%f134, %f5, %f156, %f161;
	fma.rn.ftz.f32 	%f135, %f6, %f156, %f162;
	ld.global.f32 	%f137, [%rd2+4];
	mov.u32 	%r55, 255;
	mov.u32 	%r56, 0;
	mov.u32 	%r58, 2;
	mov.f32 	%f136, 0f3C23D70A;
	// inline asm
	call (%r144, %r145), _optix_trace_2, (%rd5, %f1, %f2, %f3, %f133, %f134, %f135, %f136, %f137, %f338, %r55, %r56, %r36, %r58, %r36, %r144, %r145);
	// inline asm
	ld.local.f32 	%f163, [%rd3];
	add.ftz.f32 	%f335, %f334, %f163;

BB0_8:
	ld.u32 	%r76, [%rd4];
	mad.lo.s32 	%r77, %r76, 1664525, 1013904223;
	and.b32  	%r78, %r77, 16777215;
	cvt.rn.f32.u32	%f173, %r78;
	mov.f32 	%f174, 0f4B800000;
	div.approx.ftz.f32 	%f175, %f173, %f174;
	mad.lo.s32 	%r79, %r77, 1664525, 1013904223;
	st.u32 	[%rd4], %r79;
	and.b32  	%r80, %r79, 16777215;
	cvt.rn.f32.u32	%f176, %r80;
	div.approx.ftz.f32 	%f177, %f176, %f174;
	sqrt.approx.ftz.f32 	%f178, %f175;
	mul.ftz.f32 	%f179, %f177, 0f40C90FDB;
	cos.approx.ftz.f32 	%f180, %f179;
	mul.ftz.f32 	%f181, %f178, %f180;
	sin.approx.ftz.f32 	%f182, %f179;
	mul.ftz.f32 	%f183, %f178, %f182;
	mul.ftz.f32 	%f184, %f183, %f183;
	sub.ftz.f32 	%f186, %f32, %f184;
	mul.ftz.f32 	%f187, %f181, %f181;
	sub.ftz.f32 	%f188, %f186, %f187;
	max.ftz.f32 	%f189, %f338, %f188;
	sqrt.approx.ftz.f32 	%f190, %f189;
	mul.ftz.f32 	%f191, %f181, %f10;
	mul.ftz.f32 	%f192, %f181, %f11;
	mul.ftz.f32 	%f193, %f181, %f12;
	fma.rn.ftz.f32 	%f194, %f183, %f7, %f191;
	fma.rn.ftz.f32 	%f195, %f183, %f8, %f192;
	fma.rn.ftz.f32 	%f196, %f183, %f9, %f193;
	fma.rn.ftz.f32 	%f167, %f4, %f190, %f194;
	fma.rn.ftz.f32 	%f168, %f5, %f190, %f195;
	fma.rn.ftz.f32 	%f169, %f6, %f190, %f196;
	ld.global.f32 	%f171, [%rd2+4];
	mov.u32 	%r69, 255;
	mov.u32 	%r72, 2;
	mov.u32 	%r73, 1;
	mov.f32 	%f170, 0f3C23D70A;
	// inline asm
	call (%r144, %r145), _optix_trace_2, (%rd5, %f1, %f2, %f3, %f167, %f168, %f169, %f170, %f171, %f338, %r69, %r143, %r73, %r72, %r73, %r144, %r145);
	// inline asm
	ld.local.f32 	%f197, [%rd3];
	add.ftz.f32 	%f338, %f335, %f197;
	add.s32 	%r143, %r140, 1;

BB0_9:
	setp.lt.u32	%p6, %r1, 4;
	@%p6 bra 	BB0_11;

BB0_10:
	add.u64 	%rd33, %SPL, 0;
	ld.const.u64 	%rd32, [optixLaunchParams+80];
	mov.f32 	%f333, 0f3F800000;
	ld.u32 	%r117, [%rd4];
	mad.lo.s32 	%r118, %r117, 1664525, 1013904223;
	and.b32  	%r119, %r118, 16777215;
	cvt.rn.f32.u32	%f234, %r119;
	mov.f32 	%f235, 0f4B800000;
	div.approx.ftz.f32 	%f236, %f234, %f235;
	mad.lo.s32 	%r120, %r118, 1664525, 1013904223;
	st.u32 	[%rd4], %r120;
	and.b32  	%r121, %r120, 16777215;
	cvt.rn.f32.u32	%f237, %r121;
	div.approx.ftz.f32 	%f238, %f237, %f235;
	sqrt.approx.ftz.f32 	%f239, %f236;
	mul.ftz.f32 	%f240, %f238, 0f40C90FDB;
	cos.approx.ftz.f32 	%f241, %f240;
	mul.ftz.f32 	%f242, %f239, %f241;
	sin.approx.ftz.f32 	%f243, %f240;
	mul.ftz.f32 	%f244, %f239, %f243;
	mul.ftz.f32 	%f245, %f244, %f244;
	sub.ftz.f32 	%f247, %f333, %f245;
	mul.ftz.f32 	%f248, %f242, %f242;
	sub.ftz.f32 	%f249, %f247, %f248;
	mov.f32 	%f233, 0f00000000;
	max.ftz.f32 	%f250, %f233, %f249;
	sqrt.approx.ftz.f32 	%f251, %f250;
	mul.ftz.f32 	%f252, %f242, %f10;
	mul.ftz.f32 	%f253, %f242, %f11;
	mul.ftz.f32 	%f254, %f242, %f12;
	fma.rn.ftz.f32 	%f255, %f244, %f7, %f252;
	fma.rn.ftz.f32 	%f256, %f244, %f8, %f253;
	fma.rn.ftz.f32 	%f257, %f244, %f9, %f254;
	fma.rn.ftz.f32 	%f201, %f4, %f251, %f255;
	fma.rn.ftz.f32 	%f202, %f5, %f251, %f256;
	fma.rn.ftz.f32 	%f203, %f6, %f251, %f257;
	ld.global.f32 	%f205, [%rd2+4];
	mov.u32 	%r110, 255;
	mov.u32 	%r111, 0;
	mov.u32 	%r113, 2;
	mov.u32 	%r114, 1;
	mov.f32 	%f231, 0f3C23D70A;
	// inline asm
	call (%r81, %r82), _optix_trace_2, (%rd32, %f1, %f2, %f3, %f201, %f202, %f203, %f231, %f205, %f233, %r110, %r111, %r114, %r113, %r114, %r144, %r145);
	// inline asm
	ld.local.f32 	%f258, [%rd33];
	add.ftz.f32 	%f259, %f338, %f258;
	ld.u32 	%r122, [%rd4];
	mad.lo.s32 	%r123, %r122, 1664525, 1013904223;
	and.b32  	%r124, %r123, 16777215;
	cvt.rn.f32.u32	%f260, %r124;
	div.approx.ftz.f32 	%f261, %f260, %f235;
	mad.lo.s32 	%r125, %r123, 1664525, 1013904223;
	st.u32 	[%rd4], %r125;
	and.b32  	%r126, %r125, 16777215;
	cvt.rn.f32.u32	%f262, %r126;
	div.approx.ftz.f32 	%f263, %f262, %f235;
	sqrt.approx.ftz.f32 	%f264, %f261;
	mul.ftz.f32 	%f265, %f263, 0f40C90FDB;
	cos.approx.ftz.f32 	%f266, %f265;
	mul.ftz.f32 	%f267, %f264, %f266;
	sin.approx.ftz.f32 	%f268, %f265;
	mul.ftz.f32 	%f269, %f264, %f268;
	mul.ftz.f32 	%f270, %f269, %f269;
	sub.ftz.f32 	%f271, %f333, %f270;
	mul.ftz.f32 	%f272, %f267, %f267;
	sub.ftz.f32 	%f273, %f271, %f272;
	max.ftz.f32 	%f274, %f233, %f273;
	sqrt.approx.ftz.f32 	%f275, %f274;
	mul.ftz.f32 	%f276, %f267, %f10;
	mul.ftz.f32 	%f277, %f267, %f11;
	mul.ftz.f32 	%f278, %f267, %f12;
	fma.rn.ftz.f32 	%f279, %f269, %f7, %f276;
	fma.rn.ftz.f32 	%f280, %f269, %f8, %f277;
	fma.rn.ftz.f32 	%f281, %f269, %f9, %f278;
	fma.rn.ftz.f32 	%f210, %f4, %f275, %f279;
	fma.rn.ftz.f32 	%f211, %f5, %f275, %f280;
	fma.rn.ftz.f32 	%f212, %f6, %f275, %f281;
	ld.global.f32 	%f214, [%rd2+4];
	// inline asm
	call (%r90, %r91), _optix_trace_2, (%rd32, %f1, %f2, %f3, %f210, %f211, %f212, %f231, %f214, %f233, %r110, %r111, %r114, %r113, %r114, %r81, %r82);
	// inline asm
	ld.local.f32 	%f282, [%rd33];
	add.ftz.f32 	%f283, %f259, %f282;
	ld.u32 	%r127, [%rd4];
	mad.lo.s32 	%r128, %r127, 1664525, 1013904223;
	and.b32  	%r129, %r128, 16777215;
	cvt.rn.f32.u32	%f284, %r129;
	div.approx.ftz.f32 	%f285, %f284, %f235;
	mad.lo.s32 	%r130, %r128, 1664525, 1013904223;
	st.u32 	[%rd4], %r130;
	and.b32  	%r131, %r130, 16777215;
	cvt.rn.f32.u32	%f286, %r131;
	div.approx.ftz.f32 	%f287, %f286, %f235;
	sqrt.approx.ftz.f32 	%f288, %f285;
	mul.ftz.f32 	%f289, %f287, 0f40C90FDB;
	cos.approx.ftz.f32 	%f290, %f289;
	mul.ftz.f32 	%f291, %f288, %f290;
	sin.approx.ftz.f32 	%f292, %f289;
	mul.ftz.f32 	%f293, %f288, %f292;
	mul.ftz.f32 	%f294, %f293, %f293;
	sub.ftz.f32 	%f295, %f333, %f294;
	mul.ftz.f32 	%f296, %f291, %f291;
	sub.ftz.f32 	%f297, %f295, %f296;
	max.ftz.f32 	%f298, %f233, %f297;
	sqrt.approx.ftz.f32 	%f299, %f298;
	mul.ftz.f32 	%f300, %f291, %f10;
	mul.ftz.f32 	%f301, %f291, %f11;
	mul.ftz.f32 	%f302, %f291, %f12;
	fma.rn.ftz.f32 	%f303, %f293, %f7, %f300;
	fma.rn.ftz.f32 	%f304, %f293, %f8, %f301;
	fma.rn.ftz.f32 	%f305, %f293, %f9, %f302;
	fma.rn.ftz.f32 	%f219, %f4, %f299, %f303;
	fma.rn.ftz.f32 	%f220, %f5, %f299, %f304;
	fma.rn.ftz.f32 	%f221, %f6, %f299, %f305;
	ld.global.f32 	%f223, [%rd2+4];
	// inline asm
	call (%r99, %r100), _optix_trace_2, (%rd32, %f1, %f2, %f3, %f219, %f220, %f221, %f231, %f223, %f233, %r110, %r111, %r114, %r113, %r114, %r90, %r91);
	// inline asm
	ld.local.f32 	%f306, [%rd33];
	add.ftz.f32 	%f307, %f283, %f306;
	ld.u32 	%r132, [%rd4];
	mad.lo.s32 	%r133, %r132, 1664525, 1013904223;
	and.b32  	%r134, %r133, 16777215;
	cvt.rn.f32.u32	%f308, %r134;
	div.approx.ftz.f32 	%f309, %f308, %f235;
	mad.lo.s32 	%r135, %r133, 1664525, 1013904223;
	st.u32 	[%rd4], %r135;
	and.b32  	%r136, %r135, 16777215;
	cvt.rn.f32.u32	%f310, %r136;
	div.approx.ftz.f32 	%f311, %f310, %f235;
	sqrt.approx.ftz.f32 	%f312, %f309;
	mul.ftz.f32 	%f313, %f311, 0f40C90FDB;
	cos.approx.ftz.f32 	%f314, %f313;
	mul.ftz.f32 	%f315, %f312, %f314;
	sin.approx.ftz.f32 	%f316, %f313;
	mul.ftz.f32 	%f317, %f312, %f316;
	mul.ftz.f32 	%f318, %f317, %f317;
	sub.ftz.f32 	%f319, %f333, %f318;
	mul.ftz.f32 	%f320, %f315, %f315;
	sub.ftz.f32 	%f321, %f319, %f320;
	max.ftz.f32 	%f322, %f233, %f321;
	sqrt.approx.ftz.f32 	%f323, %f322;
	mul.ftz.f32 	%f324, %f315, %f10;
	mul.ftz.f32 	%f325, %f315, %f11;
	mul.ftz.f32 	%f326, %f315, %f12;
	fma.rn.ftz.f32 	%f327, %f317, %f7, %f324;
	fma.rn.ftz.f32 	%f328, %f317, %f8, %f325;
	fma.rn.ftz.f32 	%f329, %f317, %f9, %f326;
	fma.rn.ftz.f32 	%f228, %f4, %f323, %f327;
	fma.rn.ftz.f32 	%f229, %f5, %f323, %f328;
	fma.rn.ftz.f32 	%f230, %f6, %f323, %f329;
	ld.global.f32 	%f232, [%rd2+4];
	// inline asm
	call (%r144, %r145), _optix_trace_2, (%rd32, %f1, %f2, %f3, %f228, %f229, %f230, %f231, %f232, %f233, %r110, %r111, %r114, %r113, %r114, %r99, %r100);
	// inline asm
	ld.local.f32 	%f330, [%rd33];
	add.ftz.f32 	%f338, %f307, %f330;
	add.s32 	%r143, %r143, 4;
	setp.lt.s32	%p7, %r143, %r1;
	@%p7 bra 	BB0_10;

BB0_11:
	cvt.rn.f32.s32	%f331, %r1;
	div.approx.ftz.f32 	%f332, %f338, %f331;
	st.f32 	[%rd1], %f332;
	st.f32 	[%rd1+4], %f332;
	st.f32 	[%rd1+8], %f332;
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__shadow
.visible .entry __closesthit__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__anyhit__shadow
.visible .entry __anyhit__shadow(

)
{



	ret;
}

	// .globl	__miss__shadow
.visible .entry __miss__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 16 .b8 	__local_depot6[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<118>;
	.reg .b32 	%r<117>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<27>;


	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r10), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r11), _optix_get_launch_index_y, ();
	// inline asm
	ld.const.u32 	%r13, [optixLaunchParams];
	or.b32  	%r14, %r13, %r10;
	or.b32  	%r15, %r14, %r11;
	setp.eq.s32	%p1, %r15, 0;
	@%p1 bra 	BB6_2;

	ld.const.u32 	%r114, [optixLaunchParams+16];
	bra.uni 	BB6_3;

BB6_2:
	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 0
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.const.u64 	%rd9, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd10, %rd9;
	ld.global.v4.f32 	{%f36, %f37, %f38, %f39}, [%rd10];
	cvt.ftz.f64.f32	%fd1, %f37;
	cvt.ftz.f64.f32	%fd2, %f36;
	add.u64 	%rd11, %SP, 16;
	add.u64 	%rd12, %SPL, 16;
	st.local.v2.f64 	[%rd12], {%fd2, %fd1};
	cvt.ftz.f64.f32	%fd3, %f39;
	cvt.ftz.f64.f32	%fd4, %f38;
	st.local.v2.f64 	[%rd12+16], {%fd4, %fd3};
	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 2
	// inline asm
	call (%r17), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r16), _optix_get_launch_dimension_x, ();
	// inline asm
	st.local.v2.u32 	[%rd12], {%r16, %r17};
	mov.u64 	%rd15, $str3;
	cvta.global.u64 	%rd16, %rd15;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.const.u32 	%r114, [optixLaunchParams+16];
	st.local.u32 	[%rd12], %r114;
	mov.u64 	%rd17, $str4;
	cvta.global.u64 	%rd18, %rd17;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 4
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r24, [retval0+0];
	
	//{
	}// Callseq End 5

BB6_3:
	add.u64 	%rd19, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u64 	%rd20, 1065353216;
	st.local.u32 	[%rd1+4], %rd20;
	st.local.u32 	[%rd1], %rd20;
	mov.u32 	%r25, 1065353216;
	st.local.u32 	[%rd1+8], %r25;
	cvt.rn.f32.s32	%f1, %r114;
	rcp.approx.ftz.f32 	%f2, %f1;
	mov.f32 	%f112, 0f00000000;
	setp.leu.ftz.f32	%p2, %f1, 0f00000000;
	mov.f32 	%f113, %f112;
	mov.f32 	%f114, %f112;
	@%p2 bra 	BB6_8;

	cvt.rn.f32.s32	%f3, %r10;
	cvt.rn.f32.s32	%f4, %r11;
	ld.const.v2.f32 	{%f51, %f52}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f53, %f54}, [optixLaunchParams+56];
	ld.const.f32 	%f9, [optixLaunchParams+36];
	ld.const.v2.f32 	{%f55, %f56}, [optixLaunchParams+40];
	ld.const.v2.f32 	{%f57, %f58}, [optixLaunchParams+64];
	ld.const.u64 	%rd3, [optixLaunchParams+80];
	mul.ftz.f32 	%f14, %f1, %f1;
	mov.f32 	%f50, 0f00000000;
	mov.u32 	%r26, 0;
	ld.const.v2.f32 	{%f60, %f61}, [optixLaunchParams+24];
	ld.const.f32 	%f23, [optixLaunchParams+32];
	// inline asm
	call (%r28), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r29), _optix_get_launch_dimension_y, ();
	// inline asm
	mov.f32 	%f107, %f50;
	mov.u32 	%r115, %r26;
	mov.f32 	%f112, %f50;
	mov.f32 	%f113, %f50;
	mov.f32 	%f114, %f50;

BB6_5:
	mul.ftz.f32 	%f19, %f1, %f107;
	mul.ftz.f32 	%f20, %f2, %f107;
	mov.f32 	%f111, %f50;
	mov.u32 	%r116, %r26;

BB6_6:
	mad.lo.s32 	%r40, %r28, %r10, %r11;
	add.ftz.f32 	%f71, %f19, %f111;
	cvt.rzi.ftz.u32.f32	%r41, %f71;
	shl.b32 	%r42, %r41, 4;
	add.s32 	%r43, %r42, -1556008596;
	add.s32 	%r44, %r41, -1640531527;
	shr.u32 	%r45, %r41, 5;
	add.s32 	%r46, %r45, -939442524;
	xor.b32  	%r47, %r43, %r44;
	xor.b32  	%r48, %r47, %r46;
	add.s32 	%r49, %r40, %r48;
	shl.b32 	%r50, %r49, 4;
	add.s32 	%r51, %r50, -1383041155;
	add.s32 	%r52, %r49, -1640531527;
	xor.b32  	%r53, %r51, %r52;
	shr.u32 	%r54, %r49, 5;
	add.s32 	%r55, %r54, 2123724318;
	xor.b32  	%r56, %r53, %r55;
	add.s32 	%r57, %r56, %r41;
	shl.b32 	%r58, %r57, 4;
	add.s32 	%r59, %r58, -1556008596;
	add.s32 	%r60, %r57, 1013904242;
	shr.u32 	%r61, %r57, 5;
	add.s32 	%r62, %r61, -939442524;
	xor.b32  	%r63, %r59, %r60;
	xor.b32  	%r64, %r63, %r62;
	add.s32 	%r65, %r64, %r49;
	shl.b32 	%r66, %r65, 4;
	add.s32 	%r67, %r66, -1383041155;
	add.s32 	%r68, %r65, 1013904242;
	xor.b32  	%r69, %r67, %r68;
	shr.u32 	%r70, %r65, 5;
	add.s32 	%r71, %r70, 2123724318;
	xor.b32  	%r72, %r69, %r71;
	add.s32 	%r73, %r72, %r57;
	shl.b32 	%r74, %r73, 4;
	add.s32 	%r75, %r74, -1556008596;
	add.s32 	%r76, %r73, -626627285;
	shr.u32 	%r77, %r73, 5;
	add.s32 	%r78, %r77, -939442524;
	xor.b32  	%r79, %r75, %r76;
	xor.b32  	%r80, %r79, %r78;
	add.s32 	%r81, %r80, %r65;
	shl.b32 	%r82, %r81, 4;
	add.s32 	%r83, %r82, -1383041155;
	add.s32 	%r84, %r81, -626627285;
	xor.b32  	%r85, %r83, %r84;
	shr.u32 	%r86, %r81, 5;
	add.s32 	%r87, %r86, 2123724318;
	xor.b32  	%r88, %r85, %r87;
	add.s32 	%r89, %r88, %r73;
	shl.b32 	%r90, %r89, 4;
	add.s32 	%r91, %r90, -1556008596;
	add.s32 	%r92, %r89, 2027808484;
	shr.u32 	%r93, %r89, 5;
	add.s32 	%r94, %r93, -939442524;
	xor.b32  	%r95, %r91, %r92;
	xor.b32  	%r96, %r95, %r94;
	add.s32 	%r97, %r96, %r81;
	st.local.u32 	[%rd1+12], %r97;
	mad.lo.s32 	%r98, %r97, 1664525, 1013904223;
	and.b32  	%r99, %r98, 16777215;
	cvt.rn.f32.u32	%f72, %r99;
	mov.f32 	%f73, 0f4B800000;
	div.approx.ftz.f32 	%f74, %f72, %f73;
	fma.rn.ftz.f32 	%f75, %f2, %f74, %f20;
	mad.lo.s32 	%r100, %r98, 1664525, 7271263;
	and.b32  	%r101, %r100, 16777215;
	cvt.rn.f32.u32	%f76, %r101;
	div.approx.ftz.f32 	%f77, %f76, %f73;
	mul.ftz.f32 	%f78, %f2, %f77;
	fma.rn.ftz.f32 	%f79, %f2, %f111, %f78;
	add.ftz.f32 	%f80, %f3, %f75;
	add.ftz.f32 	%f81, %f4, %f79;
	cvt.rn.f32.u32	%f82, %r28;
	cvt.rn.f32.u32	%f83, %r29;
	div.approx.ftz.f32 	%f84, %f80, %f82;
	div.approx.ftz.f32 	%f85, %f81, %f83;
	fma.rn.ftz.f32 	%f86, %f84, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f87, %f85, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f88, %f51, %f86, %f9;
	fma.rn.ftz.f32 	%f89, %f86, %f52, %f55;
	fma.rn.ftz.f32 	%f90, %f86, %f53, %f56;
	fma.rn.ftz.f32 	%f91, %f87, %f54, %f88;
	fma.rn.ftz.f32 	%f92, %f87, %f57, %f89;
	fma.rn.ftz.f32 	%f93, %f87, %f58, %f90;
	mul.ftz.f32 	%f94, %f92, %f92;
	fma.rn.ftz.f32 	%f95, %f91, %f91, %f94;
	fma.rn.ftz.f32 	%f96, %f93, %f93, %f95;
	rsqrt.approx.ftz.f32 	%f97, %f96;
	mul.ftz.f32 	%f65, %f91, %f97;
	mul.ftz.f32 	%f66, %f92, %f97;
	mul.ftz.f32 	%f67, %f93, %f97;
	shr.u64 	%rd22, %rd19, 32;
	cvt.u32.u64	%r38, %rd22;
	cvt.u32.u64	%r39, %rd19;
	mov.u32 	%r33, 255;
	mov.u32 	%r36, 2;
	mov.f32 	%f69, 0f60AD78EC;
	// inline asm
	call (%r31, %r32), _optix_trace_2, (%rd3, %f60, %f61, %f23, %f65, %f66, %f67, %f50, %f69, %f50, %r33, %r26, %r26, %r36, %r26, %r38, %r39);
	// inline asm
	ld.local.f32 	%f98, [%rd1];
	div.approx.ftz.f32 	%f99, %f98, %f14;
	add.ftz.f32 	%f114, %f114, %f99;
	ld.local.f32 	%f100, [%rd1+4];
	div.approx.ftz.f32 	%f101, %f100, %f14;
	add.ftz.f32 	%f112, %f112, %f101;
	ld.local.f32 	%f102, [%rd1+8];
	div.approx.ftz.f32 	%f103, %f102, %f14;
	add.ftz.f32 	%f113, %f113, %f103;
	add.s32 	%r116, %r116, 1;
	cvt.rn.f32.s32	%f111, %r116;
	setp.lt.ftz.f32	%p3, %f111, %f1;
	@%p3 bra 	BB6_6;

	add.s32 	%r115, %r115, 1;
	cvt.rn.f32.s32	%f107, %r115;
	setp.lt.ftz.f32	%p4, %f107, %f1;
	@%p4 bra 	BB6_5;

BB6_8:
	mul.ftz.f32 	%f104, %f114, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r105, %f104;
	mul.ftz.f32 	%f105, %f112, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r106, %f105;
	mul.ftz.f32 	%f106, %f113, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r107, %f106;
	shl.b32 	%r108, %r106, 8;
	shl.b32 	%r109, %r107, 16;
	or.b32  	%r110, %r105, %r108;
	or.b32  	%r111, %r110, %r109;
	or.b32  	%r112, %r111, -16777216;
	// inline asm
	call (%r102), _optix_get_launch_dimension_x, ();
	// inline asm
	mad.lo.s32 	%r113, %r102, %r11, %r10;
	ld.const.u64 	%rd23, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd24, %rd23;
	mul.wide.u32 	%rd25, %r113, 4;
	add.s64 	%rd26, %rd24, %rd25;
	st.global.u32 	[%rd26], %r112;
	ret;
}


